@model IEnumerable<Capstone2.Models.Customer>

@{
    ViewData["Title"] = "Customers";
}

<style>
    body, .container-fluid, .card, .table {
        font-family: 'Segoe UI', sans-serif;
    }

    .customers-bg {
        background: linear-gradient(135deg, #f8fafc 60%, #e0e7ef 100%);
        min-height: 100vh;
        border-radius: 24px;
        padding-bottom: 2rem;
    }

    .customers-header {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .customers-header-icon {
        font-size: 2.5rem;
        color: #0d6efd;
        background: #e0f2fe;
        border-radius: 12px;
        padding: 8px 14px;
        box-shadow: 0 2px 8px rgba(13,110,253,0.08);
    }

    .customers-subtitle {
        color: #6c757d;
        font-size: 1.1rem;
        margin-top: -8px;
        margin-bottom: 18px;
    }

    .add-customer-btn {
        font-weight: 600;
        font-size: 1.1rem;
        border-radius: 12px;
        padding: 10px 22px;
        box-shadow: 0 2px 8px rgba(13,110,253,0.08);
    }

    .card {
        border-radius: 20px !important;
        box-shadow: 0 4px 24px 0 rgba(34, 41, 47, 0.08);
    }

    .table {
        border-radius: 16px;
        overflow: hidden;
        background: #fff;
    }

        .table thead th {
            background: #f1f5f9;
            font-size: 1.15rem;
            font-weight: 700;
            color: #344767;
            border-bottom: 2px solid #e0e7ef;
        }

        .table tbody tr:nth-child(even) {
            background: #f8fafc;
        }

        .table tbody tr:hover {
            background: #e0f2fe;
            transition: background 0.2s;
        }

    .action-btn {
        border-radius: 8px;
        font-size: 1rem;
        padding: 6px 16px;
        margin-left: 2px;
        margin-right: 2px;
        transition: background 0.2s, color 0.2s;
    }

        .action-btn i {
            margin-right: 4px;
        }
</style>

<div class="container-fluid mt-4 px-4 customers-bg">
    @if (TempData["PaymentError"] != null)
    {
        <div class="alert alert-danger">@TempData["PaymentError"]</div>
    }
    @if (TempData["PaymentSuccess"] != null)
    {
        <div class="alert alert-success">@TempData["PaymentSuccess"]</div>
    }
    @if (TempData["CateringStatusError"] != null)
    {
        <div class="alert alert-warning">@TempData["CateringStatusError"]</div>
    }
    @if (TempData["HeadWaiterAssigned"] != null)
    {
        <div class="alert alert-success">@TempData["HeadWaiterAssigned"]</div>
    }
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            <div class="customers-header mb-1">
                <span class="customers-header-icon"><i class="bi bi-people"></i></span>
                <h2 class="fw-bold mb-0">Customer Orders</h2>
            </div>
            <div class="customers-subtitle">Track and manage all catering customer orders here.</div>
        </div>
        <div class="d-flex gap-2">
            <a asp-action="OrdersByDate" class="btn btn-outline-primary add-customer-btn">
                <i class="bi bi-calendar-day"></i> Daily Orders
            </a>
            <a asp-action="DateSummary" class="btn btn-outline-info add-customer-btn">
                <i class="bi bi-calendar-range"></i> Orders Summary
            </a>
            <a asp-action="Create" class="btn btn-primary add-customer-btn">
                <i class="bi bi-plus-lg"></i> Add New Customer
            </a>
        </div>
    </div>

    <div class="card mb-4 shadow-sm border-0 rounded-4">
        <div class="card-body">
            <form asp-controller="Customers" asp-action="Index" method="get" class="row g-3">
                <div class="col-md-6">
                    <input type="text" name="searchString" class="form-control" placeholder="Search by Order Number, Customer Name..." />
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary w-100">Search</button>
                </div>
                <div class="col-md-2">
                    <a asp-action="Index" class="btn btn-outline-secondary w-100">Clear</a>
                </div>
                <div class="col-md-2">
                    <a asp-action="Index" class="btn btn-success w-100">View All</a>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow-sm border-0 rounded-4">
        <div class="card-body p-0">
            <table class="table table-hover align-middle mb-0 rounded-4 overflow-hidden" style="font-size: 1.15rem;">
                <thead class="table-light rounded-4">
                    <tr>
                        <th class="fw-bold" style="font-size: 1.2rem;">Order Number</th>
                        <th class="fw-bold" style="font-size: 1.2rem;">@Html.DisplayNameFor(model => model.First().Name)</th>
                        <th class="fw-bold" style="font-size: 1.2rem;">@Html.DisplayNameFor(model => model.First().ContactNo)</th>
                        <th class="fw-bold" style="font-size: 1.2rem;">@Html.DisplayNameFor(model => model.First().Address)</th>
                        <th class="fw-bold" style="font-size: 1.2rem;">Order Status</th>
                        <th class="fw-bold" style="font-size: 1.2rem;">Catering Status</th>
                        <th class="fw-bold" style="font-size: 1.2rem;">Head Waiter</th>
                        <th class="text-end fw-bold" style="font-size: 1.2rem;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var order = item.Order;
                        <tr>
                            <td style="font-size: 1.1rem;">
                                @if (order?.OrderNumber != null)
                                {
                                    <span class="fw-bold text-primary">@order.OrderNumber</span>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td style="font-size: 1.1rem;">@Html.DisplayFor(modelItem => item.Name)</td>
                            <td style="font-size: 1.1rem;">@Html.DisplayFor(modelItem => item.ContactNo)</td>
                            <td style="font-size: 1.1rem;">@Html.DisplayFor(modelItem => item.Address)</td>
                            <td>
                                @if (order != null)
                                {
                                    var downPayment = (decimal)order.TotalPayment * 0.5m;
                                    var downPaymentRemaining = downPayment - (decimal)order.AmountPaid;
                                    var balance = (decimal)order.TotalPayment - (decimal)order.AmountPaid;
                                    var isReadyToCater = downPaymentRemaining <= 0 && balance > 0;

                                    <form asp-action="ToggleStatus"
                                          asp-route-id="@item.CustomerID"
                                          method="post"
                                          class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit"
                                                class="btn @(item.IsPaid ? "btn-success" : "btn-outline-secondary") btn-sm"
                                        @(order.AmountPaid < order.TotalPayment ? "disabled" : "")>
                                            <span style="font-size: 0.9rem;">
                                                @if (item.IsPaid)
                                                {
                                                    @("Paid")
                                                }
                                                else if (isReadyToCater)
                                                {
                                                    @("Not Totally Paid")
                                                }
                                                else
                                                {
                                                    @("Not Paid")
                                                }
                                            </span>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <span class="text-muted">No Order</span>
                                }
                            </td>
                            <td>
                                <form method="post" class="update-status-form d-flex align-items-center" data-id="@item.CustomerID">

                                    <select name="cateringStatus" class="form-select form-select-lg me-2 catering-status-dropdown" style="font-size: 1.1rem;">
                                        @{
                                            string[] status = ["Pending", "Accepted", "Ongoing", "Completed"];
                                        }

                                        @for (int i = 0; i < status.Length; i++)
                                        {
                                            if (status[i] == item.Order.Status)
                                            {
                                                <option value="@status[i]" selected>@status[i]</option>
                                            }
                                            else
                                            {
                                                <option value="@status[i]">@status[i]</option>
                                            }
                                        }
                                    </select>
                                </form>
                            </td>
                            <td>
                                @if (order?.HeadWaiter != null && order.HeadWaiter.User != null)
                                {
                                    @($"{order.HeadWaiter.User.FirstName} {order.HeadWaiter.User.LastName}")
                                }
                                else
                                {
                                    <span class="text-muted">None</span>
                                }
                            </td>

                            <td class="text-end">
                                <a asp-action="ViewOrder" asp-route-id="@item.CustomerID" class="btn btn-outline-secondary action-btn"><i class="bi bi-eye"></i> View Order</a>
                                <a asp-action="PaymentDetails" asp-route-id="@item.CustomerID" class="btn btn-outline-success action-btn"><i class="bi bi-credit-card"></i> Payment Details</a>
                                @if (order != null && order.Status != "Completed" && order.AmountPaid >= 0.5 * order.TotalPayment)
                                {
                                    <a asp-action="AssignHeadWaiter" asp-route-id="@item.CustomerID" class="btn btn-outline-primary action-btn"><i class="bi bi-person-plus"></i> Assign Head Waiter</a>
                                }
                                @if (order != null && order.Status == "Completed")
                                {
                                    <a asp-action="InventoryReport" asp-route-id="@item.CustomerID" class="btn btn-outline-info action-btn"><i class="bi bi-clipboard-data"></i> Inventory Report</a>
                                }
                                <a asp-action="Delete" asp-route-id="@item.CustomerID" class="btn btn-outline-danger action-btn"><i class="bi bi-trash"></i> Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    $(function () {
        $('.catering-status-dropdown').on('change', function () {
            var form = $(this).closest('form');
            var customerId = form.data('id');
            var selectedStatus = $(this).val();

            console.log(customerId);
            console.log(selectedStatus);

            $.ajax({
                url: '/Customers/UpdateCateringStatus',
                method: 'POST',
                data: {
                    id: customerId,
                    cateringStatus: selectedStatus,
                },
                success: function () {
                    console.log("Catering status updated for customer ID:", customerId);
                },
                error: function () {
                    alert("Error saving catering status.");
                }
            });
        });
    });
</script>

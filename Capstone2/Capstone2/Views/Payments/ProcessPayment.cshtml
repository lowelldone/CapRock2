@model Capstone2.Models.Order

@{
    ViewData["Title"] = "Process Payment";
    var existingPayments = ViewBag.ExistingPayments as List<Capstone2.Models.Payment>;
    var remainingBalance = ViewBag.RemainingBalance as double? ?? 0;
    var totalPaid = ViewBag.TotalPaid as double? ?? Model.AmountPaid;
    var appliedPaidToBase = ViewBag.AppliedPaidToBase as double? ?? Math.Min(totalPaid, Model.TotalPayment);
    var additionalCharges = ViewBag.AdditionalCharges as decimal? ?? 0m;
    var chargedItems = ViewBag.ChargedItems as IEnumerable<dynamic>;
    var isHeadWaiter = ViewBag.IsHeadWaiter as bool? ?? false;
    var effectiveTotal = Model.TotalPayment + (double)additionalCharges;
    // Old balance refers to the base order balance only; excess over base is returned to the customer
    var oldBalance = Math.Max(0, Model.TotalPayment - appliedPaidToBase);
}

<style>
    :root {
        --primary-purple: #7c3aed;
        --primary-purple-dark: #6d28d9;
        --primary-purple-light: #a78bfa;
        --secondary-purple: #8b5cf6;
        --accent-purple: #c084fc;
        --purple-bg: #faf5ff;
        --purple-bg-light: #f3e8ff;
        --purple-border: #e9d5ff;
        --text-purple: #581c87;
        --text-purple-light: #7c3aed;
        --success-color: #10b981;
        --warning-color: #f59e0b;
        --danger-color: #ef4444;
        --info-color: #3b82f6;
    }

    body, .container, .card, .btn, h1, h2, h3, h4, h5, h6, p, label, input, textarea, select {
        font-family: 'Segoe UI', sans-serif;
    }

    .processpayment-bg {
        background: linear-gradient(135deg, var(--purple-bg) 0%, var(--purple-bg-light) 50%, #f8fafc 100%);
        min-height: 100vh;
        border-radius: 24px;
        padding-bottom: 2rem;
    }

    .processpayment-header {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .processpayment-header-icon {
        font-size: 2.5rem;
        color: var(--primary-purple);
        background: var(--purple-bg-light);
        border-radius: 12px;
        padding: 8px 14px;
        box-shadow: 0 2px 8px rgba(124, 58, 237, 0.08);
    }

    .processpayment-subtitle {
        color: var(--text-purple);
        font-size: 1.1rem;
        margin-top: -8px;
        margin-bottom: 18px;
    }

    .order-card {
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 8px 32px 0 rgba(124, 58, 237, 0.1);
        border: 1px solid var(--purple-border);
        padding: 2rem;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }

        .order-card:hover {
            box-shadow: 0 12px 40px 0 rgba(124, 58, 237, 0.15);
            transform: translateY(-2px);
        }

    .payment-form-card {
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 8px 32px 0 rgba(124, 58, 237, 0.1);
        border: 1px solid var(--purple-border);
        padding: 2rem;
        margin-bottom: 1.5rem;
    }

    .table {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(124, 58, 237, 0.1);
        border: 1px solid var(--purple-border);
    }

        .table thead th {
            background: linear-gradient(135deg, var(--primary-purple) 0%, var(--secondary-purple) 100%);
            border: none;
            font-weight: 600;
            color: white;
            padding: 1rem;
        }

        .table tbody td {
            padding: 1rem;
            border: none;
            border-bottom: 1px solid var(--purple-border);
        }

        .table tbody tr {
            background: #fff;
        }

            .table tbody tr:hover {
                background: var(--purple-bg-light);
            }

    .btn-action {
        font-weight: 500;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-purple) 0%, var(--secondary-purple) 100%);
        border-color: var(--primary-purple);
        color: white;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, var(--primary-purple-dark) 0%, var(--primary-purple) 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(124, 58, 237, 0.3);
        }

    .btn-outline-secondary {
        border-color: var(--text-purple);
        color: var(--text-purple);
        background: transparent;
    }

        .btn-outline-secondary:hover {
            background: var(--text-purple);
            color: white;
            transform: translateY(-2px);
        }

    .total-section {
        background: var(--purple-bg-light);
        border-radius: 12px;
        padding: 1.5rem;
        margin-top: 1rem;
        border: 1px solid var(--purple-border);
    }

    .payment-summary {
        background: var(--purple-bg-light);
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        border: 1px solid var(--purple-border);
    }

    .form-control:focus {
        border-color: var(--primary-purple);
        box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
    }

    .alert {
        border-radius: 12px;
        border: none;
    }

    .alert-success {
        background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
        color: #065f46;
    }

    .alert-danger {
        background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
        color: #991b1b;
    }

    /* Desktop styles - keep original layout */
    .processpayment-bg {
        padding: 2rem;
    }

    .processpayment-header {
        flex-direction: row;
        align-items: center;
        gap: 1rem;
    }

    .d-flex.gap-3 {
        flex-direction: row;
        gap: 1rem !important;
    }

    .d-flex.gap-3 .btn {
        width: auto;
    }

    .form-control {
        font-size: 16px;
    }

    .table {
        font-size: 0.9rem;
    }

    .table th,
    .table td {
        padding: 0.75rem 0.5rem;
    }

    .badge {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
    }

    .btn-action {
        width: auto;
        justify-content: center;
    }

    /* Mobile responsive adjustments */
    @@media (max-width: 768px) {
        .processpayment-bg {
            padding: 0.5rem;
        }

        .processpayment-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
            text-align: center;
        }

        .d-flex.gap-3 {
            flex-direction: column;
            gap: 1rem !important;
        }

        .d-flex.gap-3 .btn {
            width: 100%;
        }

        .btn-action {
            width: 100%;
            justify-content: center;
        }

        .processpayment-header-icon {
            font-size: 2rem;
        }

        .processpayment-subtitle {
            font-size: 1rem;
        }

        .order-card,
        .payment-form-card {
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .row {
            margin: 0;
        }

        .col-md-6 {
            margin-bottom: 1rem;
        }

        .table {
            font-size: 0.8rem;
        }

        .table th,
        .table td {
            padding: 0.5rem 0.25rem;
        }

        .table th:nth-child(1),
        .table td:nth-child(1) {
            min-width: 100px;
        }

        .table th:nth-child(2),
        .table td:nth-child(2) {
            min-width: 120px;
        }

        .table th:nth-child(3),
        .table td:nth-child(3) {
            min-width: 80px;
        }

        .table th:nth-child(4),
        .table td:nth-child(4) {
            min-width: 100px;
        }

        .payment-summary {
            padding: 1rem;
        }

        .total-section {
            padding: 1rem;
        }
    }

    @@media (max-width: 576px) {
        .processpayment-header-icon {
            font-size: 1.75rem;
        }

        .processpayment-subtitle {
            font-size: 0.9rem;
        }

        .order-card,
        .payment-form-card {
            padding: 0.75rem;
        }

        .table {
            font-size: 0.75rem;
        }

        .table th,
        .table td {
            padding: 0.4rem 0.2rem;
        }

        .badge {
            font-size: 0.7rem;
            padding: 0.3rem 0.6rem;
        }

        .btn-action {
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
        }

        .payment-summary {
            padding: 0.75rem;
        }

        .total-section {
            padding: 0.75rem;
        }

        .form-label {
            font-size: 0.9rem;
        }

        .form-control {
            font-size: 16px;
        }
    }

    /* Modal responsive adjustments */
    @@media (max-width: 768px) {
        .modal-dialog {
            margin: 0.5rem;
        }

        .modal-lg {
            max-width: calc(100% - 1rem);
        }
    }
</style>

<div class="container-fluid mt-4 px-4 processpayment-bg">
    @if (TempData["PaymentError"] != null)
    {
        <div class="alert alert-danger">@TempData["PaymentError"]</div>
    }
    @if (TempData["PaymentSuccess"] != null)
    {
        <div class="alert alert-success">@TempData["PaymentSuccess"]</div>
    }

    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            <div class="processpayment-header mb-1">
                <span class="processpayment-header-icon"><i class="bi bi-credit-card"></i></span>
                <h2 class="fw-bold mb-0">Process Payment</h2>
            </div>
            <div class="processpayment-subtitle">Process payment for @Model.Customer.Name</div>
        </div>
    </div>

    <div class="payment-form-card">
        <h4 class="fw-bold mb-3">@(isHeadWaiter ? "Record Balance Payment" : "Process Payment")</h4>
        <form asp-action="ProcessPayment" method="post">
            <input type="hidden" name="orderId" value="@Model.OrderId" />
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="paymentAmount" class="form-label fw-semibold">@(isHeadWaiter ? "Balance Payment Amount (₱)" : "Payment Amount (₱)")</label>
                        <input type="number"
                               class="form-control"
                               id="paymentAmount"
                               name="paymentAmount"
                               step="0.01"
                               min="0.01"
                               max="@remainingBalance"
                               value="@remainingBalance"
                               required />
                        <div class="form-text">Maximum payment: ₱@remainingBalance.ToString("F2")</div>
                    </div>
                    <div class="mb-3">
                        <label for="paymentType" class="form-label fw-semibold">Payment Type</label>
                        <select class="form-control" id="paymentType" name="paymentType" required>
                            <option value="Cash">Cash</option>
                            <option value="Gcash">Gcash</option>
                            <option value="Bank Transfer">Bank Transfer</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="payment-summary">
                        <h6 class="fw-bold mb-2">@(isHeadWaiter ? "Balance Summary" : "Payment Summary")</h6>
                        @if (additionalCharges > 0)
                        {
                            <p class="mb-1"><strong>Old Balance:</strong> ₱@oldBalance.ToString("F2")</p>
                            <p class="mb-1">
                                <strong>Additional Charges:</strong> ₱@additionalCharges.ToString("F2")
                                @if (chargedItems != null && chargedItems.Any())
                                {
                                    <button type="button" class="btn btn-sm btn-info ms-2" data-bs-toggle="modal" data-bs-target="#chargedItemsModal">
                                        View Charged Items
                                    </button>
                                }
                            </p>
                            <p class="mb-1"><strong>New Balance:</strong> ₱@remainingBalance.ToString("F2")</p>
                        }
                        else
                        {
                            <p class="mb-1"><strong>Balance:</strong> ₱@remainingBalance.ToString("F2")</p>
                        }
                        @* <p class="mb-1"><strong>Payment Amount:</strong> <span id="displayAmount">₱@remainingBalance.ToString("F2")</span></p>
                        <p class="mb-0"><strong>Remaining After Payment:</strong> <span id="remainingAfter">₱0.00</span></p> *@
                    </div>
                </div>
            </div>
            <div class="d-flex gap-3 mt-4">
                <button type="submit" class="btn btn-primary btn-action">
                    <i class="bi bi-check-circle me-2"></i>Process Payment
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary btn-action">
                    <i class="bi bi-arrow-left me-2"></i>Back to Payments
                </a>
            </div>
        </form>
    </div>

    @if (!isHeadWaiter && existingPayments?.Any() == true)
    {
        <div class="order-card">
            <h4 class="fw-bold mb-3">
                <i class="bi bi-clock-history me-2"></i>
                Payment History
            </h4>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date & Time</th>
                            <th>Transaction Number</th>
                            <th>Amount</th>
                            <th>Payment Type</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payment in existingPayments)
                        {
                            <tr>
                                <td>@payment.Date.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>
                                    <span class="badge bg-info">@payment.TransactionNumber</span>
                                </td>
                                <td>₱@payment.Amount.ToString("F2")</td>
                                <td>
                                    <span class="badge bg-primary">@payment.PaymentType</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@if (chargedItems != null && chargedItems.Any())
{
    <div class="modal fade" id="chargedItemsModal" tabindex="-1" aria-labelledby="chargedItemsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="chargedItemsModalLabel">Items Charged (Lost/Damaged)</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Material</th>
                                <th>Lost</th>
                                <th>Damaged</th>
                                <th>Charge Per Item</th>
                                <th>Total Charge</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in chargedItems)
                            {
                                <tr>
                                    <td>@item.MaterialName</td>
                                    <td>@item.Lost</td>
                                    <td>@item.Damaged</td>
                                    <td>₱@item.ChargePerItem</td>
                                    <td>₱@((item.Lost + item.Damaged) * item.ChargePerItem)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

<script>
    document.getElementById('paymentAmount').addEventListener('input', function () {
        var paymentAmount = parseFloat(this.value) || 0;
        var remainingBalance = @remainingBalance;
        var remainingAfter = remainingBalance - paymentAmount;

        document.getElementById('displayAmount').textContent = '₱' + paymentAmount.toFixed(2);
        document.getElementById('remainingAfter').textContent = '₱' + Math.max(0, remainingAfter).toFixed(2);
    });
</script>

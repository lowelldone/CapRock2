@model IEnumerable<Capstone2.Models.Order>

@{
    ViewData["Title"] = "Payments";
    var additionalChargesByOrder = ViewBag.AdditionalChargesByOrder as System.Collections.Generic.IDictionary<int, decimal> ?? new System.Collections.Generic.Dictionary<int, decimal>();

    // Show "Updated Total Amount" header only when any order in the Model has additional charges > 0
    var hasAdditionalCharges = Model != null
        && Model.Any(m => additionalChargesByOrder.ContainsKey(m.OrderId) && additionalChargesByOrder[m.OrderId] > 0m);
    var remainingBalanceByOrder = ViewBag.RemainingBalanceByOrder as System.Collections.Generic.IDictionary<int, double> ?? new System.Collections.Generic.Dictionary<int, double>();
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<div class="container-fluid modern-bg">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                <i class="bi bi-credit-card"></i>
            </div>
            <div>
                <h1 class="modern-title">Payment Management</h1>
                <p class="modern-subtitle">Track and process payments for orders with outstanding balances</p>
            </div>
        </div>
    </div>

    <!-- Search Section -->
    <div class="modern-search-card">
        <form asp-controller="Payments" asp-action="Index" method="get" class="modern-search-form">
            <div>
                <label class="modern-form-label">Search Orders</label>
                <input type="text" name="searchString" class="modern-form-control" placeholder="Search by Order Number or Customer Name..." value="@Context.Request.Query["searchString"]" />
            </div>
            <div>
                <button type="submit" class="modern-btn-search w-100">
                    <i class="bi bi-search me-2"></i>Search
                </button>
            </div>
            <div>
                <a asp-action="Index" class="modern-action-btn btn-outline-secondary w-100">
                    <i class="bi bi-arrow-clockwise me-2"></i>Clear
                </a>
            </div>
        </form>
    </div>

    <!-- Payments Table -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-credit-card-2-front"></i>
                Outstanding Payments (@Model.Count())
            </h5>
        </div>
        <div class="table-responsive">
            <table class="modern-table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th>Customer</th>
                        @if (ViewBag.IsAdmin == true)
                        {
                            <th>Order Number</th>
                        }
                        <th>Catering Date</th>
                        <th>Balance</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var extra = additionalChargesByOrder.ContainsKey(item.OrderId) ? (double)additionalChargesByOrder[item.OrderId] : 0d;
                        var balance = remainingBalanceByOrder.ContainsKey(item.OrderId)
                        ? remainingBalanceByOrder[item.OrderId]
                        : (extra > 0 ? extra : Math.Max(0, item.TotalPayment - Math.Min(item.AmountPaid, item.TotalPayment)));

                        <tr>
                            <td>
                                <div class="modern-name">@item.Customer.Name</div>
                            </td>
                            @if (ViewBag.IsAdmin == true)
                            {
                                <td>
                                    <span class="modern-badge">@item.OrderNumber</span>
                                </td>
                            }
                            <td>
                                <div class="modern-info">@item.CateringDate.ToShortDateString()</div>
                            </td>
                            <td>
                                <span class="modern-status-badge settling">
                                    <i class="bi bi-exclamation-triangle"></i>
                                    ₱@balance.ToString("F2")
                                </span>
                            </td>
                            <td class="text-end">
                                <div class="modern-table-actions">
                                    <a asp-action="ProcessPayment" asp-route-id="@item.OrderId" class="modern-table-action-btn btn-outline-success">
                                        <i class="bi bi-credit-card"></i>
                                        Payment
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="modern-status-card text-center">
            <div class="modern-card-body">
                <i class="bi bi-check-circle text-success" style="font-size: 4rem; color: var(--success-color);"></i>
                <h4 class="modern-title mt-3" style="color: var(--gray-600);">No Outstanding Balances</h4>
                <p class="modern-subtitle">All orders are fully paid!</p>
            </div>
        </div>
    }
</div>

@{
    ViewData["Title"] = "Account";
}

<style>
    .modern-bg {
        background: #f8f9fa;
        min-height: 100vh;
        padding: 2rem 0;
    }

    .modern-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        overflow: hidden;
    }

    .modern-header {
        background: white;
        color: #667eea;
        padding: 2rem;
        text-align: center;
        border-bottom: 1px solid #e1e5e9;
    }

    .modern-header-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    .modern-title {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }

    .modern-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
        margin: 0.5rem 0 0 0;
    }

    .modern-form {
        padding: 2rem;
    }

    .modern-form-group {
        margin-bottom: 1.5rem;
    }

    .modern-form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
        display: block;
    }

    .modern-form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e1e5e9;
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: #fff;
    }

    .modern-form-control:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .modern-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 0.75rem 2rem;
        border-radius: 10px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
    }

    .modern-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        color: white;
    }

    .modern-btn-secondary {
        background: #6c757d;
        margin-left: 1rem;
    }

    .modern-btn-secondary:hover {
        background: #5a6268;
        color: white;
    }

    .modern-alert {
        padding: 1rem 1.5rem;
        border-radius: 10px;
        margin-bottom: 1.5rem;
        font-weight: 500;
    }

    .modern-alert-danger {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .modern-alert-success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .btn-container {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
    }

    @@media (max-width: 768px) {
        .modern-bg {
            padding: 1rem 0;
        }

        .modern-card {
            margin: 0 1rem;
        }

        .modern-header {
            padding: 1.5rem;
        }

        .modern-title {
            font-size: 1.5rem;
        }

        .modern-form {
            padding: 1.5rem;
        }

        .btn-container {
            flex-direction: column;
            align-items: center;
        }

        .modern-btn-secondary {
            margin-left: 0;
            margin-top: 0.5rem;
        }
    }

    @@media (max-width: 576px) {
        .modern-bg {
            padding: 0.5rem 0;
        }

        .modern-card {
            margin: 0 0.5rem;
        }

        .modern-header {
            padding: 1rem;
        }

        .modern-header-icon {
            font-size: 2rem;
        }

        .modern-title {
            font-size: 1.25rem;
        }

        .modern-subtitle {
            font-size: 1rem;
        }

        .modern-form {
            padding: 1rem;
        }

        .modern-form-group {
            margin-bottom: 1rem;
        }

        .modern-form-control {
            padding: 0.6rem 0.8rem;
            font-size: 0.9rem;
        }

        .modern-btn {
            padding: 0.6rem 1.5rem;
            font-size: 0.9rem;
        }

        .btn-container {
            gap: 0.5rem;
        }
    }

    @@media (max-width: 400px) {
        .modern-card {
            margin: 0 0.25rem;
        }

        .modern-header {
            padding: 0.75rem;
        }

        .modern-form {
            padding: 0.75rem;
        }

        .modern-title {
            font-size: 1.1rem;
        }

        .modern-subtitle {
            font-size: 0.9rem;
        }

        .modern-btn {
            padding: 0.5rem 1rem;
            font-size: 0.85rem;
        }
    }
</style>

<div class="container-fluid modern-bg">
    @if (TempData["ProfileError"] != null)
    {
        <div class="modern-alert modern-alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["ProfileError"]
        </div>
    }
    @if (TempData["ProfileSuccess"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["ProfileSuccess"]
        </div>
    }

    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="modern-card">
                <div class="modern-header">
                    <div class="modern-header-icon">
                        <i class="bi bi-person-circle"></i>
                    </div>
                    <h1 class="modern-title">Account Settings</h1>
                    <p class="modern-subtitle">Update your account information</p>
                </div>

                <div class="modern-form">
                    <form method="post" asp-controller="Account" asp-action="UpdateAccount">
                        @Html.AntiForgeryToken()
                        
                        <div class="modern-form-group">
                            <label for="currentPassword" class="modern-form-label">Current Password</label>
                            <input type="password" class="modern-form-control" id="currentPassword" name="currentPassword" required>
                        </div>
                        
                        <div class="modern-form-group">
                            <label for="newPassword" class="modern-form-label">New Password</label>
                            <input type="password" class="modern-form-control" id="newPassword" name="newPassword" required>
                        </div>
                        
                        <div class="modern-form-group">
                            <label for="confirmPassword" class="modern-form-label">Confirm New Password</label>
                            <input type="password" class="modern-form-control" id="confirmPassword" name="confirmPassword" required>
                        </div>

                        <div class="btn-container">
                            <button type="submit" class="modern-btn">
                                <i class="bi bi-check-circle me-2"></i>
                                Update Account
                            </button>
                            @{
                                var role = Context.Session.GetString("Role");
                                string backUrl = role switch
                                {
                                    "ADMIN" => Url.Action("Index", "DashboardDateSummary"),
                                    "HEADWAITER" => Url.Action("Index", "PaidOrders"),
                                    "WAITER" => Url.Action("Index", "Schedules"),
                                    _ => Url.Action("Index", "Home")
                                };
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const newPassword = document.getElementById('newPassword');
        const confirmPassword = document.getElementById('confirmPassword');

        form.addEventListener('submit', function(e) {
            if (newPassword.value !== confirmPassword.value) {
                e.preventDefault();
                alert('New password and confirm password do not match.');
                return false;
            }
        });
    });
</script>

@model Capstone2.Models.InventoryTrendsViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Inventory Trends";
}

<style>
    .report-card {
        background: #fff;
        border-radius: 16px;
        border: 1px solid #e9d5ff;
        box-shadow: 0 8px 24px rgba(124,58,237,.08);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .summary-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .summary-item {
        background: #faf5ff;
        border: 1px solid #e9d5ff;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
    }

    .summary-value {
        font-size: 2rem;
        font-weight: bold;
        color: #7c3aed;
        margin-bottom: 0.5rem;
    }

    .summary-label {
        color: #6b7280;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .trend-table {
        font-size: 0.875rem;
    }

        .trend-table th {
            background: #f9fafb;
            font-weight: 600;
            color: #374151;
        }

    .consumable-badge {
        background: #dcfce7;
        color: #166534;
        padding: 0.25rem 0.5rem;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .non-consumable-badge {
        background: #dbeafe;
        color: #1e40af;
        padding: 0.25rem 0.5rem;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .chart-container {
        position: relative;
        height: 400px;
        margin: 1rem 0;
    }

    .tab-content {
        padding: 1rem 0;
    }

    .nav-tabs .nav-link {
        border: none;
        color: #6b7280;
        font-weight: 500;
    }

        .nav-tabs .nav-link.active {
            color: #7c3aed;
            border-bottom: 2px solid #7c3aed;
            background: none;
        }
</style>

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold mb-1">Inventory Consumption Trends</h2>
            <p class="text-muted mb-0">Track material usage patterns and consumption trends over time</p>
        </div>
    </div>

    <!-- Date Range and Grouping Controls -->
    <div class="report-card">
        <form class="row g-3" method="get">
            <div class="col-md-3">
                <label class="form-label">Start Date</label>
                <input class="form-control" type="date" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-3">
                <label class="form-label">End Date</label>
                <input class="form-control" type="date" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Group By</label>
                <select class="form-select" name="groupBy" onchange="this.form.submit()">
                    @if (Model.GroupBy == "day")
                    {
                        <option value="day" selected>Day</option>
                    }
                    else
                    {
                        <option value="day">Day</option>
                    }

                    @if (Model.GroupBy == "week")
                    {
                        <option value="week" selected>Week</option>
                    }
                    else
                    {
                        <option value="week">Week</option>
                    }

                    @if (Model.GroupBy == "month")
                    {
                        <option value="month" selected>Month</option>
                    }
                    else
                    {
                        <option value="month">Month</option>
                    }

                    @if (Model.GroupBy == "quarter")
                    {
                        <option value="quarter" selected>Quarter</option>
                    }
                    else
                    {
                        <option value="quarter">Quarter</option>
                    }

                    @if (Model.GroupBy == "year")
                    {
                        <option value="year" selected>Year</option>
                    }
                    else
                    {
                        <option value="year">Year</option>
                    }
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button class="btn btn-primary w-100" type="submit">Apply Filters</button>
            </div>
        </form>
    </div>

    <!-- Summary Statistics -->
    <div class="report-card">
        <h5 class="fw-bold mb-3">Summary Overview</h5>
        <div class="summary-grid">
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.TotalMaterials</div>
                <div class="summary-label">Total Materials</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.ConsumableMaterials</div>
                <div class="summary-label">Consumable Items</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.NonConsumableMaterials</div>
                <div class="summary-label">Non-Consumable Items</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.TotalOrders</div>
                <div class="summary-label">Total Orders</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.TotalConsumption.ToString("N0")</div>
                <div class="summary-label">Total Items Consumed</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.OverallLossRate.ToString("F1")%</div>
                <div class="summary-label">Overall Loss Rate</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.OverallDamageRate.ToString("F1")%</div>
                <div class="summary-label">Overall Damage Rate</div>
            </div>
            <div class="summary-item">
                <div class="summary-value">@Model.Summary.AverageMaterialsPerOrder.ToString("F1")</div>
                <div class="summary-label">Avg Items per Order</div>
            </div>
        </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="report-card">
        <ul class="nav nav-tabs" id="trendsTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">
                    <i class="bi bi-graph-up"></i> Overview Trends
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="materials-tab" data-bs-toggle="tab" data-bs-target="#materials" type="button" role="tab">
                    <i class="bi bi-box"></i> Material Details
                </button>
            </li>

        </ul>

        <div class="tab-content" id="trendsTabContent">
            <!-- Overview Trends Tab -->
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="chart-container">
                    <canvas id="overviewChart"></canvas>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover trend-table">
                        <thead>
                            <tr>
                                <th>Period</th>
                                <th>Orders</th>
                                <th>Items Consumed</th>
                                <th>Items Returned</th>
                                <th>Items Lost</th>
                                <th>Items Damaged</th>
                                <th>Net Consumption</th>
                                <th>Avg per Order</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var period in Model.Periods)
                            {
                                <tr>
                                    <td><strong>@period.Label</strong></td>
                                    <td>@period.OrderCount</td>
                                    <td>@period.Consumed.ToString("N0")</td>
                                    <td>@period.Returned.ToString("N0")</td>
                                    <td>@period.Lost.ToString("N0")</td>
                                    <td>@period.Damaged.ToString("N0")</td>
                                    <td><strong>@period.NetConsumption.ToString("N0")</strong></td>
                                    <td>@period.AverageConsumptionPerOrder.ToString("F1")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Material Details Tab -->
            <div class="tab-pane fade" id="materials" role="tabpanel">
                <div class="table-responsive">
                    <table class="table table-hover trend-table">
                        <thead>
                            <tr>
                                <th>Material</th>
                                <th>Type</th>
                                <th>Total Consumed</th>
                                <th>Total Lost</th>
                                <th>Total Damaged</th>
                                <th>Loss Rate</th>
                                <th>Damage Rate</th>
                                <th>Orders Used</th>
                                <th>Avg per Order</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var material in Model.MaterialTrends)
                            {
                                <tr>
                                    <td><strong>@material.MaterialName</strong></td>
                                    <td>
                                        @if (material.IsConsumable)
                                        {
                                            <span class="consumable-badge">Consumable</span>
                                        }
                                        else
                                        {
                                            <span class="non-consumable-badge">Non-Consumable</span>
                                        }
                                    </td>
                                    <td>@material.TotalConsumption.ToString("N0")</td>
                                    <td>@material.TotalLoss.ToString("N0")</td>
                                    <td>@material.TotalDamage.ToString("N0")</td>
                                    <td>@material.LossRate.ToString("F1")%</td>
                                    <td>@material.DamageRate.ToString("F1")%</td>
                                    <td>@material.OrderCount</td>
                                    <td>@material.AverageConsumptionPerOrder.ToString("F1")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</div>

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Overview Chart
    const overviewCtx = document.getElementById('overviewChart').getContext('2d');
    const overviewChart = new Chart(overviewCtx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Periods.Select(p => p.Label))),
            datasets: [
                {
                    label: 'Items Consumed',
                    data: @Html.Raw(Json.Serialize(Model.Periods.Select(p => p.Consumed))),
                    borderColor: '#7c3aed',
                    backgroundColor: 'rgba(124, 58, 237, 0.1)',
                    tension: 0.4,
                    fill: true
                },
                {
                    label: 'Items Returned',
                    data: @Html.Raw(Json.Serialize(Model.Periods.Select(p => p.Returned))),
                    borderColor: '#10b981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    tension: 0.4,
                    fill: true
                },
                {
                    label: 'Items Lost',
                    data: @Html.Raw(Json.Serialize(Model.Periods.Select(p => p.Lost))),
                    borderColor: '#ef4444',
                    backgroundColor: 'rgba(239, 68, 68, 0.1)',
                    tension: 0.4,
                    fill: true
                },
                {
                    label: 'Items Damaged',
                    data: @Html.Raw(Json.Serialize(Model.Periods.Select(p => p.Damaged))),
                    borderColor: '#f59e0b',
                    backgroundColor: 'rgba(245, 158, 11, 0.1)',
                    tension: 0.4,
                    fill: true
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                title: {
                    display: true,
                    text: 'Material Consumption Trends Over Time'
                },
                legend: {
                    position: 'top'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Number of Items'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Time Period'
                    }
                }
            }
        }
    });


</script>

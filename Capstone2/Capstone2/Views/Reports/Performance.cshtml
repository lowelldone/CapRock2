@model Capstone2.Models.PerformanceViewModel

@{
    ViewData["Title"] = "Business Performance";
}

<style>
    :root {
        --primary-purple: #7c3aed;
        --primary-purple-dark: #6d28d9;
        --primary-purple-light: #a78bfa;
        --secondary-purple: #8b5cf6;
        --accent-purple: #c084fc;
        --purple-bg: #faf5ff;
        --purple-bg-light: #f3e8ff;
        --purple-border: #e9d5ff;
        --text-purple: #581c87;
        --text-purple-light: #7c3aed;
    }

    .performance-bg {
        background: linear-gradient(135deg, var(--purple-bg) 0%, var(--purple-bg-light) 50%, #f8fafc 100%);
        min-height: 100vh;
        padding: 2rem;
    }

    .performance-card {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        border: 1px solid var(--purple-border);
        box-shadow: 0 8px 32px rgba(124, 58, 237, 0.1);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }

        .performance-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 40px rgba(124, 58, 237, 0.15);
        }

    .metric-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .metric-box {
        background: linear-gradient(135deg, var(--purple-bg-light) 0%, white 100%);
        border: 1px solid var(--purple-border);
        border-radius: 16px;
        padding: 1.25rem;
        text-align: center;
        transition: all 0.3s ease;
    }

        .metric-box:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 24px rgba(124, 58, 237, 0.2);
        }

    .metric-label {
        color: var(--text-purple);
        font-size: 0.875rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        margin-bottom: 0.5rem;
    }

    .metric-value {
        color: var(--primary-purple);
        font-size: 2rem;
        font-weight: 800;
        line-height: 1;
    }

    .metric-subtext {
        color: var(--text-purple-light);
        font-size: 0.75rem;
        margin-top: 0.25rem;
    }

    .chart-container {
        position: relative;
        height: 400px;
        margin-bottom: 1rem;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: var(--text-purple);
        margin: 0;
    }

    .page-subtitle {
        color: var(--text-purple-light);
        font-size: 1.125rem;
        margin-top: 0.5rem;
    }

    .filter-group {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }

    .filter-btn {
        background: rgba(124, 58, 237, 0.1);
        color: var(--primary-purple);
        border: 2px solid var(--purple-border);
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .filter-btn:hover, .filter-btn.active {
            background: var(--primary-purple);
            color: white;
            border-color: var(--primary-purple);
        }

    .section-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--text-purple);
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .icon-badge {
        background: var(--purple-bg-light);
        color: var(--primary-purple);
        border-radius: 8px;
        padding: 0.25rem 0.5rem;
    }
</style>

<div class="performance-bg">
    <div class="page-header">
        <div>
            <h1 class="page-title">Business Performance</h1>
            <p class="page-subtitle">Track your monthly sales and revenue trends</p>
        </div>
        <div class="filter-group">
            <a href="@Url.Action("Sales", "Reports")" class="filter-btn">
                <i class="bi bi-arrow-left me-1"></i> Back to Sales
            </a>
            <a href="@Url.Action("Performance", new { months = 6 })" class="filter-btn @(Model.MonthsDisplayed == 6 ? "active" : "")">6 Months</a>
            <a href="@Url.Action("Performance", new { months = 12 })" class="filter-btn @(Model.MonthsDisplayed == 12 ? "active" : "")">12 Months</a>
            <a href="@Url.Action("Performance", new { months = 24 })" class="filter-btn @(Model.MonthsDisplayed == 24 ? "active" : "")">24 Months</a>
        </div>
    </div>

    <!-- Revenue Chart -->
    <div class="performance-card">
        <div class="section-title">
            <span class="icon-badge"><i class="bi bi-graph-up-arrow"></i></span>
            Monthly Revenue Trend
        </div>
        <div class="chart-container">
            <canvas id="revenueChart"></canvas>
        </div>
    </div>

    <!-- Orders Chart -->
    <div class="performance-card">
        <div class="section-title">
            <span class="icon-badge"><i class="bi bi-cart-check"></i></span>
            Monthly Orders Trend
        </div>
        <div class="chart-container">
            <canvas id="ordersChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Prepare data
    var months = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyData.Select(m => m.MonthLabel)));
    var revenue = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyData.Select(m => m.TotalRevenue)));
    var orders = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyData.Select(m => m.TotalOrders)));
    var pax = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyData.Select(m => m.TotalPax)));

    // Chart configuration
    Chart.defaults.font.family = "'Segoe UI', sans-serif";
    Chart.defaults.color = '#581c87';

    // Revenue Chart
    const revenueCtx = document.getElementById('revenueChart').getContext('2d');
    new Chart(revenueCtx, {
        type: 'line',
        data: {
            labels: months,
            datasets: [{
                label: 'Revenue (₱)',
                data: revenue,
                borderColor: '#7c3aed',
                backgroundColor: 'rgba(124, 58, 237, 0.1)',
                borderWidth: 3,
                fill: true,
                tension: 0.4,
                pointRadius: 5,
                pointHoverRadius: 8,
                pointBackgroundColor: '#7c3aed',
                pointBorderColor: '#fff',
                pointBorderWidth: 2
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        font: { size: 14, weight: '600' },
                        padding: 15
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(124, 58, 237, 0.9)',
                    padding: 12,
                    titleFont: { size: 14, weight: '600' },
                    bodyFont: { size: 13 },
                    callbacks: {
                        label: function(context) {
                            return ' Revenue: ₱' + context.parsed.y.toLocaleString();
                        }
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return '₱' + value.toLocaleString();
                        },
                        font: { size: 12 }
                    },
                    grid: {
                        color: 'rgba(124, 58, 237, 0.1)'
                    }
                },
                x: {
                    ticks: {
                        font: { size: 12 }
                    },
                    grid: {
                        display: false
                    }
                }
            }
        }
    });

    // Orders Chart
    const ordersCtx = document.getElementById('ordersChart').getContext('2d');
    new Chart(ordersCtx, {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Number of Orders',
                data: orders,
                backgroundColor: 'rgba(139, 92, 246, 0.7)',
                borderColor: '#8b5cf6',
                borderWidth: 2,
                borderRadius: 8,
                hoverBackgroundColor: '#7c3aed'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        font: { size: 14, weight: '600' },
                        padding: 15
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(139, 92, 246, 0.9)',
                    padding: 12,
                    titleFont: { size: 14, weight: '600' },
                    bodyFont: { size: 13 }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1,
                        font: { size: 12 }
                    },
                    grid: {
                        color: 'rgba(124, 58, 237, 0.1)'
                    }
                },
                x: {
                    ticks: {
                        font: { size: 12 }
                    },
                    grid: {
                        display: false
                    }
                }
            }
        }
    });

    // Combined Chart
    const combinedCtx = document.getElementById('combinedChart').getContext('2d');
    new Chart(combinedCtx, {
        type: 'line',
        data: {
            labels: months,
            datasets: [
                {
                    label: 'Revenue (₱)',
                    data: revenue,
                    borderColor: '#7c3aed',
                    backgroundColor: 'rgba(124, 58, 237, 0.1)',
                    borderWidth: 3,
                    yAxisID: 'y',
                    tension: 0.4,
                    fill: true
                },
                {
                    label: 'Orders',
                    data: orders,
                    borderColor: '#8b5cf6',
                    backgroundColor: 'rgba(139, 92, 246, 0.1)',
                    borderWidth: 3,
                    yAxisID: 'y1',
                    tension: 0.4,
                    fill: true
                },
                {
                    label: 'PAX',
                    data: pax,
                    borderColor: '#c084fc',
                    backgroundColor: 'rgba(192, 132, 252, 0.1)',
                    borderWidth: 3,
                    yAxisID: 'y1',
                    tension: 0.4,
                    fill: true
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            interaction: {
                mode: 'index',
                intersect: false,
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        font: { size: 14, weight: '600' },
                        padding: 15
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(124, 58, 237, 0.9)',
                    padding: 12,
                    titleFont: { size: 14, weight: '600' },
                    bodyFont: { size: 13 }
                }
            },
            scales: {
                y: {
                    type: 'linear',
                    display: true,
                    position: 'left',
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return '₱' + value.toLocaleString();
                        },
                        font: { size: 12 }
                    },
                    grid: {
                        color: 'rgba(124, 58, 237, 0.1)'
                    }
                },
                y1: {
                    type: 'linear',
                    display: true,
                    position: 'right',
                    beginAtZero: true,
                    ticks: {
                        font: { size: 12 }
                    },
                    grid: {
                        drawOnChartArea: false
                    }
                },
                x: {
                    ticks: {
                        font: { size: 12 }
                    },
                    grid: {
                        display: false
                    }
                }
            }
        }
    });
</script>
}


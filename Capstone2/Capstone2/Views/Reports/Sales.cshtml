@model Capstone2.Models.SalesReportViewModel

@{
    ViewData["Title"] = "Sales Report";
}

<style>
    .report-card {
        background: #fff;
        border-radius: 16px;
        border: 1px solid #e9d5ff;
        box-shadow: 0 8px 24px rgba(124,58,237,.08);
        padding: 1.5rem;
        margin-bottom: 1rem;
    }

    .summary {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

        .summary .metric {
            flex: 1;
            min-width: 220px;
            background: #faf5ff;
            border: 1px solid #e9d5ff;
            border-radius: 12px;
            padding: 1rem;
        }

    .table {
        border-radius: 12px;
        overflow: hidden;
    }

    .actions {
        display: flex;
        gap: .5rem;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .modal-xl {
        max-width: 90%;
    }

    .badge {
        font-size: 0.75em;
    }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold mb-0">Sales Report</h2>
        <div class="actions">
            <a class="btn btn-outline-primary" href="@Url.Action("Performance", "Reports")">
                <i class="bi bi-graph-up-arrow me-1"></i> Business Performance
            </a>
            <a class="btn btn-primary" href="@Url.Action("SalesCsv", new { startDate = Model.StartDate.ToString("yyyy-MM-dd"), endDate = Model.EndDate.ToString("yyyy-MM-dd"), groupBy = Model.GroupBy })">
                <i class="bi bi-file-earmark-arrow-down me-1"></i> Export CSV
            </a>
        </div>
    </div>

    <div class="report-card">
        <form class="row g-3" method="get">
            <div class="col-md-3">
                <label class="form-label">Start Date</label>
                <input class="form-control" type="date" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-3">
                <label class="form-label">End Date</label>
                <input class="form-control" type="date" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Group By</label>
                <select class="form-select" id="sales-groupBy" name="groupBy" onchange="this.form.submit()">
                    <option value="day">Day</option>
                    <option value="week">Week</option>
                    <option value="month">Month</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button class="btn btn-primary w-100" type="submit">Filter</button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var sel = document.getElementById('sales-groupBy');
            if (sel) { sel.value = '@Model.GroupBy'; }
        });
    </script>

    <div class="report-card">
        <div class="summary">
            <div class="metric">
                <div class="text-muted">Total Orders</div>
                <div class="fs-3 fw-bold">@Model.TotalOrders</div>
            </div>
            <div class="metric">
                <div class="text-muted">Total Transactions</div>
                <div class="fs-3 fw-bold">@Model.TotalTransactions</div>
            </div>
            <div class="metric">
                <div class="text-muted">Grand Total</div>
                <div class="fs-3 fw-bold">₱@Model.GrandTotal.ToString("N2")</div>
            </div>
        </div>
    </div>

    <div class="report-card">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>No. of Orders</th>
                        <th>No. of Transactions</th>
                        <th>Grand Total</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in Model.Periods)
                    {
                        <tr>
                            <td>@p.Label</td>
                            <td>@p.NumberOfOrders</td>
                            <td>@p.NumberOfTransactions</td>
                            <td>₱@p.GrandTotal.ToString("N2")</td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary"
                                        onclick="viewTransactions('@p.PeriodStart.ToString("yyyy-MM-dd")', '@Model.GroupBy')"
                                        @(p.NumberOfTransactions == 0 ? "disabled" : "")>
                                    <i class="bi bi-list-ul me-1"></i>View Transactions
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Transaction Details Modal -->
<div class="modal fade" id="transactionModal" tabindex="-1" aria-labelledby="transactionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transactionModalLabel">Transaction Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="transactionLoading" class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading transactions...</p>
                </div>
                <div id="transactionContent" style="display: none;">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Date & Time</th>
                                    <th>Transaction Number</th>
                                    <th>Order Number</th>
                                    <th>Customer</th>
                                    <th>Amount</th>
                                    <th>Payment Type</th>
                                </tr>
                            </thead>
                            <tbody id="transactionTableBody">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id="noTransactions" style="display: none;" class="text-center py-4">
                    <i class="bi bi-inbox text-muted" style="font-size: 3rem;"></i>
                    <h5 class="mt-3 text-muted">No Transactions</h5>
                    <p class="text-muted">No transactions found for this period.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    function viewTransactions(periodStart, groupBy) {
        // Show modal
        var modal = new bootstrap.Modal(document.getElementById('transactionModal'));
        modal.show();

        // Update modal title with period info
        var periodLabel = formatPeriodLabel(periodStart, groupBy);
        document.getElementById('transactionModalLabel').textContent = `Transaction Details - ${periodLabel}`;

        // Reset modal content
        document.getElementById('transactionLoading').style.display = 'block';
        document.getElementById('transactionContent').style.display = 'none';
        document.getElementById('noTransactions').style.display = 'none';

        // Load transactions via AJAX
        fetch(`/Reports/GetTransactions?periodStart=${periodStart}&groupBy=${groupBy}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('transactionLoading').style.display = 'none';

                if (data && data.length > 0) {
                    document.getElementById('transactionContent').style.display = 'block';
                    populateTransactionTable(data);
                } else {
                    document.getElementById('noTransactions').style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error loading transactions:', error);
                document.getElementById('transactionLoading').style.display = 'none';
                document.getElementById('noTransactions').style.display = 'block';
            });
    }

    function formatPeriodLabel(periodStart, groupBy) {
        const date = new Date(periodStart);
        switch (groupBy) {
            case 'week':
                return `Week of ${date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}`;
            case 'month':
                return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
            default:
                return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
        }
    }

    function populateTransactionTable(transactions) {
        const tbody = document.getElementById('transactionTableBody');
        tbody.innerHTML = '';

        transactions.forEach(transaction => {
            const row = document.createElement('tr');
            row.innerHTML = `
                    <td>${new Date(transaction.date).toLocaleString()}</td>
                    <td><span class="badge bg-info">${transaction.transactionNumber}</span></td>
                    <td><span class="badge bg-secondary">${transaction.orderNumber}</span></td>
                    <td>${transaction.customerName}</td>
                    <td>₱${parseFloat(transaction.amount).toFixed(2)}</td>
                    <td><span class="badge bg-primary">${transaction.paymentType}</span></td>
                `;
            tbody.appendChild(row);
        });
    }
</script>

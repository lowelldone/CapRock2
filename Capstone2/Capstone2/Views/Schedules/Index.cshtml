@model Capstone2.Models.SchedulesIndexViewModel
@using System.Linq

@{
    ViewData["Title"] = "Schedules";
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<style>
    /* Override status badge styles to ensure proper colors */
    .modern-status-badge.accepted {
        background: rgba(16, 185, 129, 0.15) !important;
        color: #10b981 !important;
        border: 2px solid rgba(16, 185, 129, 0.3) !important;
        font-weight: 700 !important;
    }

    .modern-status-badge.pending {
        background: rgba(245, 158, 11, 0.15) !important;
        color: #f59e0b !important;
        border: 2px solid rgba(245, 158, 11, 0.3) !important;
        font-weight: 700 !important;
    }

    .modern-status-badge.ongoing {
        background: rgba(59, 130, 246, 0.15) !important;
        color: #3b82f6 !important;
        border: 2px solid rgba(59, 130, 246, 0.3) !important;
        font-weight: 700 !important;
    }

    .modern-status-badge.inactive {
        background: rgba(107, 114, 128, 0.15) !important;
        color: #6b7280 !important;
        border: 2px solid rgba(107, 114, 128, 0.3) !important;
        font-weight: 700 !important;
    }

    .modern-status-badge.settling {
        background: rgba(239, 68, 68, 0.15) !important;
        color: #ef4444 !important;
        border: 2px solid rgba(239, 68, 68, 0.3) !important;
        font-weight: 700 !important;
    }

    /* Desktop styles - keep original layout */
    .modern-bg {
        padding: 2rem;
    }

    .modern-header {
        flex-direction: row;
        align-items: center;
        gap: 1rem;
    }

    .modern-action-buttons {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
    }

    .modern-action-btn {
        width: auto;
        justify-content: center;
    }

    .modern-table {
        font-size: 0.9rem;
        table-layout: auto;
    }

        .modern-table tbody td {
            max-width: none;
            overflow: visible;
            text-overflow: clip;
            white-space: normal;
            word-wrap: normal;
        }

        .modern-table th,
        .modern-table td {
            padding: 0.75rem 0.5rem;
        }

    .modern-status-badge {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
        white-space: nowrap;
    }

    .modal-dialog {
        margin: 1.75rem auto;
        max-width: 500px;
        display: flex;
        align-items: center;
        min-height: calc(100% - 3.5rem);
    }

    .modal-content {
        border-radius: 12px;
        border: none;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
    }

    .modal-header {
        background: linear-gradient(135deg, var(--primary-purple) 0%, var(--secondary-purple) 100%);
        color: white;
        border-bottom: none;
        border-radius: 12px 12px 0 0;
        padding: 1.5rem;
    }

    .modal-title {
        font-weight: 600;
        font-size: 1.25rem;
    }

    .btn-close {
        filter: invert(1);
        opacity: 0.8;
    }

        .btn-close:hover {
            opacity: 1;
        }

    .modal-body {
        padding: 2rem;
    }

    .modal-footer {
        border-top: 1px solid var(--purple-border);
        padding: 1.5rem;
        background: var(--purple-bg);
    }

    .form-label {
        font-weight: 600;
        color: var(--text-purple);
        margin-bottom: 0.5rem;
    }

    .form-control {
        border: 2px solid var(--purple-border);
        border-radius: 8px;
        padding: 0.75rem;
        font-size: 16px;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: var(--primary-purple);
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
        }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: var(--primary-purple);
        border-color: var(--primary-purple);
    }

        .btn-primary:hover {
            background: var(--primary-purple-dark);
            border-color: var(--primary-purple-dark);
            transform: translateY(-2px);
        }

    .btn-secondary {
        background: #6b7280;
        border-color: #6b7280;
    }

        .btn-secondary:hover {
            background: #4b5563;
            border-color: #4b5563;
            transform: translateY(-2px);
        }

    /* Mobile responsive adjustments */
    @@media (max-width: 768px) {
        .modern-bg {
            padding: 0.5rem;
        }

        .modern-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
            text-align: center;
        }

        .modern-action-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            width: 100%;
        }

        .modern-action-btn {
            width: 100%;
            justify-content: center;
        }

        .modern-title {
            font-size: 1.5rem;
        }

        .modern-subtitle {
            font-size: 0.9rem;
        }

        .modern-table {
            font-size: 0.8rem;
        }

            .modern-table th,
            .modern-table td {
                padding: 0.5rem 0.25rem;
            }

        .modern-status-badge {
            font-size: 0.7rem;
            padding: 0.3rem 0.6rem;
        }

        .modal-dialog {
            margin: 0.5rem;
            max-width: calc(100% - 1rem);
        }

        .modal-header {
            padding: 1rem;
        }

        .modal-title {
            font-size: 1.1rem;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            padding: 1rem;
            flex-direction: column;
            gap: 0.5rem;
        }

        .btn {
            width: 100%;
            margin: 0;
        }

        .form-control {
            font-size: 16px;
            padding: 0.75rem;
        }
    }

    @@media (max-width: 576px) {
        .modern-bg {
            padding: 0.25rem;
        }

        .modern-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
            text-align: center;
        }

        .modern-action-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            width: 100%;
        }

        .modern-action-btn {
            width: 100%;
            justify-content: center;
        }

        .modern-table {
            font-size: 0.75rem;
        }

            .modern-table th,
            .modern-table td {
                padding: 0.4rem 0.2rem;
            }

        .modern-status-badge {
            font-size: 0.65rem;
            padding: 0.25rem 0.5rem;
        }

        .modern-title {
            font-size: 1.25rem;
        }

        .modern-subtitle {
            font-size: 0.8rem;
        }

        .modal-dialog {
            margin: 0.25rem;
            max-width: calc(100% - 0.5rem);
        }

        .modal-header {
            padding: 0.75rem;
        }

        .modal-title {
            font-size: 1rem;
        }

        .modal-body {
            padding: 1rem;
        }

        .modal-footer {
            padding: 0.75rem;
        }

        .form-control {
            font-size: 16px;
            padding: 0.6rem;
        }
    }
</style>

<div class="container-fluid modern-bg">
    @if (TempData["ProfileError"] != null)
    {
        <div class="modern-alert modern-alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["ProfileError"]
        </div>
    }
    @if (TempData["ProfileSuccess"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["ProfileSuccess"]
        </div>
    }

    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                <i class="bi bi-calendar-event"></i>
            </div>
            <div>
                <h1 class="modern-title">Catering Schedules</h1>
                @if ((ViewBag.Role as string) == "ADMIN")
                {
                    <p class="modern-subtitle">All head waiters' and waiters' assigned orders</p>
                }
                else
                {
                    <p class="modern-subtitle">View your upcoming catering schedules and assignments</p>
                }
            </div>
        </div>
        @if ((ViewBag.Role as string) == "WAITER")
        {
            <div class="modern-action-buttons">
                <button class="modern-action-btn btn-outline-primary" onclick="openProfileModal()">
                    <i class="bi bi-person-circle"></i>
                    Update Profile
                </button>
            </div>
        }
    </div>

    @if (Model.HeadWaiterAssignedOrders.Any() || Model.WaiterAssignedOrders.Any())
    {
        @if (Model.HeadWaiterAssignedOrders.Any())
        {
            <!-- Head Waiter Assigned Orders -->
            <div class="modern-status-card">
                <div class="modern-status-card-header">
                    <h5 class="modern-status-card-title">
                        <i class="bi bi-person-badge"></i>
                        Head Waiter Assigned Orders (@Model.HeadWaiterAssignedOrders.Count())
                    </h5>
                </div>
                <div class="table-responsive">
                    <table class="modern-table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Head Waiter</th>
                                @if ((ViewBag.Role as string) != "WAITER")
                                {
                                    <th>Waiters</th>
                                }
                                <th>Customer Name</th>
                                <th>Catering Date</th>
                                <th>Venue</th>
                                <th>Occasion</th>
                                <th>Food Serving Time</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.HeadWaiterAssignedOrders)
                            {
                                <tr>
                                    <td>
                                        <div class="modern-name">@order.HeadWaiter?.User?.FirstName</div>
                                    </td>
                                    <td>
                                        <div class="modern-name">@order.Customer.Name</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.CateringDate.ToString("MMM dd, yyyy")</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.Venue</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.Occasion</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.timeOfFoodServing.ToString("hh:mm tt")</div>
                                    </td>
                                    @if ((ViewBag.Role as string) != "WAITER")
                                    {
                                        <td>
                                            @if (order.OrderWaiters != null && order.OrderWaiters.Any())
                                            {
                                                <div class="modern-info">@string.Join(", ", order.OrderWaiters.Select(ow => ow.Waiter?.User?.FirstName))</div>
                                            }
                                            else
                                            {
                                                <span class="modern-info text-muted">-</span>
                                            }
                                        </td>
                                    }
                                    <td>
                                        @{
                                            var status = order.Status?.Trim()?.ToUpper();
                                        }
                                        @if (status == "PENDING")
                                        {
                                            <span class="modern-status-badge pending">
                                                <i class="bi bi-clock"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else if (status == "CONFIRMED" || status == "ACCEPTED")
                                        {
                                            <span class="modern-status-badge accepted">
                                                <i class="bi bi-check-circle"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else if (status == "IN PROGRESS" || status == "ONGOING")
                                        {
                                            <span class="modern-status-badge ongoing">
                                                <i class="bi bi-play-circle"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else if (status == "SETTLING BALANCE")
                                        {
                                            <span class="modern-status-badge settling">
                                                <i class="bi bi-calculator"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="modern-status-badge inactive">
                                                <i class="bi bi-x-circle"></i>
                                                @order.Status
                                            </span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @if (Model.WaiterAssignedOrders.Any())
        {
            <!-- Waiter Assigned Orders -->
            <div class="modern-status-card">
                <div class="modern-status-card-header">
                    <h5 class="modern-status-card-title">
                        <i class="bi bi-people"></i>
                        Waiter Assigned Orders (@Model.WaiterAssignedOrders.Count())
                    </h5>
                </div>
                <div class="table-responsive">
                    <table class="modern-table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                @if ((ViewBag.Role as string) != "WAITER")
                                {
                                    <th>Waiters</th>
                                }
                                <th>Head Waiter</th>
                                <th>Customer Name</th>
                                <th>Catering Date</th>
                                <th>Venue</th>
                                <th>Occasion</th>
                                <th>Food Serving Time</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.WaiterAssignedOrders)
                            {
                                <tr>
                                    @if ((ViewBag.Role as string) != "WAITER")
                                    {
                                        <td>
                                            @if (order.OrderWaiters != null && order.OrderWaiters.Any())
                                            {
                                                <div class="modern-name">@string.Join(", ", order.OrderWaiters.Select(ow => ow.Waiter?.User?.FirstName))</div>
                                            }
                                            else
                                            {
                                                <span class="modern-info text-muted">-</span>
                                            }
                                        </td>
                                    }
                                    <td>
                                        <div class="modern-name">@order.HeadWaiter?.User?.FirstName</div>
                                    </td>
                                    <td>
                                        <div class="modern-name">@order.Customer.Name</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.CateringDate.ToString("MMM dd, yyyy")</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.Venue</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.Occasion</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">@order.timeOfFoodServing.ToString("hh:mm tt")</div>
                                    </td>
                                    <td>
                                        @{
                                            var status = order.Status?.Trim()?.ToUpper();
                                        }
                                        @if (status == "PENDING")
                                        {
                                            <span class="modern-status-badge pending">
                                                <i class="bi bi-clock"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else if (status == "CONFIRMED" || status == "ACCEPTED")
                                        {
                                            <span class="modern-status-badge accepted">
                                                <i class="bi bi-check-circle"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else if (status == "IN PROGRESS" || status == "ONGOING")
                                        {
                                            <span class="modern-status-badge ongoing">
                                                <i class="bi bi-play-circle"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else if (status == "SETTLING BALANCE")
                                        {
                                            <span class="modern-status-badge settling">
                                                <i class="bi bi-calculator"></i>
                                                @order.Status
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="modern-status-badge inactive">
                                                <i class="bi bi-x-circle"></i>
                                                @order.Status
                                            </span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
    else
    {
        <!-- No Schedules Message -->
        <div class="modern-status-card text-center">
            <div class="modern-card-body">
                <i class="bi bi-calendar-x text-muted" style="font-size: 3rem; color: var(--gray-400);"></i>
                @if ((ViewBag.Role as string) == "ADMIN")
                {
                    <h4 class="modern-title mt-3" style="color: var(--gray-600);">No Assigned Orders</h4>
                    <p class="modern-subtitle">There are currently no orders assigned to any head waiter or waiter.</p>
                }
                else
                {
                    <h4 class="modern-title mt-3" style="color: var(--gray-600);">No Assigned Schedules</h4>
                    <p class="modern-subtitle">You don't have any assigned catering schedules at the moment.</p>
                    <p class="modern-subtitle">Please check back later or contact your head waiter for assignments.</p>
                }
            </div>
        </div>
    }
</div>

<!-- Profile Modal - Only show for waiters -->
@if ((ViewBag.Role as string) == "WAITER")
{
    <div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="profileModalLabel">Update Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="profileForm" method="post" asp-controller="Schedules" asp-action="UpdateProfile">
                        @Html.AntiForgeryToken()
                        <div class="modern-form-group">
                            <label for="username" class="modern-form-label">Username</label>
                            <input type="text" class="modern-form-control" id="username" name="username" required>
                        </div>
                        <div class="modern-form-group">
                            <label for="currentPassword" class="modern-form-label">Current Password</label>
                            <input type="password" class="modern-form-control" id="currentPassword" name="currentPassword" required>
                        </div>
                        <div class="modern-form-group">
                            <label for="newPassword" class="modern-form-label">New Password</label>
                            <input type="password" class="modern-form-control" id="newPassword" name="newPassword" required>
                        </div>
                        <div class="modern-form-group">
                            <label for="confirmPassword" class="modern-form-label">Confirm New Password</label>
                            <input type="password" class="modern-form-control" id="confirmPassword" name="confirmPassword" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="modern-action-btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" form="profileForm" class="modern-action-btn btn-primary">Update Profile</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openProfileModal() {
            const modal = new bootstrap.Modal(document.getElementById('profileModal'));
            modal.show();
        }

        // Form validation
        document.addEventListener('DOMContentLoaded', function () {
            const profileForm = document.getElementById('profileForm');
            if (profileForm) {
                profileForm.addEventListener('submit', function (e) {
                    const newPassword = document.getElementById('newPassword').value;
                    const confirmPassword = document.getElementById('confirmPassword').value;

                    if (newPassword !== confirmPassword) {
                        e.preventDefault();
                        alert('New password and confirm password do not match!');
                        return false;
                    }

                    if (newPassword.length < 6) {
                        e.preventDefault();
                        alert('Password must be at least 6 characters long!');
                        return false;
                    }
                });
            }
        });
    </script>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
} 
@{
    ViewData["Title"] = "Manage Prices";
    var supplierId = (int)ViewBag.SupplierId;
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<div class="container-fluid modern-bg">
    <!-- Alerts Section -->
    @if (TempData["SupplierSuccess"] != null)
    {
        <div id="price-success-toast" class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["SupplierSuccess"]
        </div>
        <script>
            setTimeout(function () {
                var toast = document.getElementById('price-success-toast');
                if (toast) {
                    var bsAlert = bootstrap.Alert.getOrCreateInstance(toast);
                    bsAlert.close();
                }
            }, 3000);
        </script>
    }
    @if (TempData["SupplierError"] != null)
    {
        <div id="price-error-toast" class="modern-alert modern-alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["SupplierError"]
        </div>
    }

    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                <i class="bi bi-currency-dollar"></i>
            </div>
            <div>
                <h1 class="modern-title">Manage Prices</h1>
                <p class="modern-subtitle">Set and manage material prices for this supplier</p>
            </div>
        </div>
        <div class="modern-action-buttons">
            <a asp-action="Index" class="modern-action-btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i>Back
            </a>
        </div>
    </div>

    <!-- Set Price Form -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-plus-circle"></i>
                Set New Price
            </h5>
        </div>
        <div class="modern-card-body">
            <form id="setPriceForm" asp-action="SetPrice" method="post" class="row g-3 align-items-end">
                @Html.AntiForgeryToken()
                <input type="hidden" name="supplierId" value="@supplierId" />
                <div class="col-md-6">
                    <label class="modern-form-label">Material</label>
                    <select class="modern-form-control" id="materialSelect" name="materialId"></select>
                </div>
                <div class="col-md-4">
                    <label class="modern-form-label">Unit Price</label>
                    <input class="modern-form-control" type="number" name="unitPrice" id="unitPrice" step="0.01" min="0" required />
                </div>
                <div class="col-md-2">
                    <button class="modern-action-btn btn-primary w-100" type="submit">
                        <i class="bi bi-save"></i>Save
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Current Prices Table -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-list-ul"></i>
                Current Prices
            </h5>
        </div>
        <div class="modern-card-body">
            <div class="table-responsive">
                <table class="modern-table" id="pricesTable">
                    <thead>
                        <tr>
                            <th>Material</th>
                            <th>Unit Price</th>
                            <th>Last Updated</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    (function () {
        const supplierId = @supplierId;
        const materialSelect = document.getElementById('materialSelect');
        const pricesTableBody = document.querySelector('#pricesTable tbody');

        async function loadData() {
            const res = await fetch(`/Suppliers/Prices/${supplierId}`);
            if (!res.ok) return;
            const data = await res.json();

            // Populate materials
            materialSelect.innerHTML = '';
            data.materials.forEach(m => {
                const opt = document.createElement('option');
                opt.value = m.materialId;
                opt.textContent = m.name;
                materialSelect.appendChild(opt);
            });

            // Populate prices
            pricesTableBody.innerHTML = '';
            data.prices.forEach(p => {
                const tr = document.createElement('tr');
                tr.innerHTML = `<td>
                                        <div class="modern-name">${p.materialName}</div>
                                    </td>
                                    <td>
                                        <div class="modern-name">₱${Number(p.unitPrice).toFixed(2)}</div>
                                    </td>
                                    <td>
                                        <div class="modern-info">${new Date(p.lastUpdated).toLocaleString()}</div>
                                    </td>`;
                pricesTableBody.appendChild(tr);
            });
        }

        loadData();
    })();
</script>



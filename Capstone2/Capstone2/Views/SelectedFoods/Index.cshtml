@model Capstone2.Models.Order
@{
    // serialize initial items into a JS array
    var items = ViewBag.SelectedItems as List<Capstone2.Models.OrderDetail>;
    var initJson = System.Text.Json.JsonSerializer.Serialize(
        items.Select(x => new
        {
            MenuId = x.MenuId,
            Name = x.Name,
            Quantity = x.Quantity,
            price = x.Menu.Price
        })
    );
}

<style>
    body, .container, .card, .btn, h1, h2, h3, h4, h5, h6, p, label, input, textarea, select {
        font-family: 'Segoe UI', sans-serif;
    }
    .review-bg {
        background: linear-gradient(135deg, var(--purple-bg) 0%, var(--purple-bg-light) 50%, #f8fafc 100%);
        min-height: 100vh;
        border-radius: 12px;
        padding-bottom: 1rem;
    }
    .review-header {
        display: flex;
        align-items: center;
        gap: 8px;
    }
    .review-header-icon {
        font-size: 1.5rem;
        color: var(--primary-purple);
        background: var(--purple-bg-light);
        border-radius: 8px;
        padding: 4px 8px;
        box-shadow: 0 2px 8px rgba(124, 58, 237, 0.08);
    }
    .review-subtitle {
        color: #6c757d;
        font-size: 0.9rem;
        margin-top: -4px;
        margin-bottom: 10px;
    }
    .review-card {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 3px 16px 0 rgba(124, 58, 237, 0.08);
        padding: 1rem;
        margin-bottom: 1rem;
        border: 1px solid var(--purple-border);
    }
    .table {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        border: 1px solid var(--purple-border);
    }
    .table thead th {
        background: linear-gradient(135deg, var(--primary-purple) 0%, var(--secondary-purple) 100%);
        border: none;
        font-weight: 600;
        color: #fff;
        padding: 0.8rem;
        border-bottom: 2px solid var(--primary-purple-dark);
        text-align: center;
    }
    .table tbody td {
        padding: 0.8rem;
        border: none;
        border-bottom: 1px solid var(--purple-border);
        text-align: center;
        vertical-align: middle;
    }
    .table tbody tr {
        background: #fff;
    }
    .table tbody tr:hover {
        background: var(--purple-bg);
        transition: background-color 0.2s ease;
    }
    .table tbody tr:last-child td {
        border-bottom: none;
    }
    .table tfoot td {
        background: var(--purple-bg-light);
        font-weight: 600;
        color: var(--text-purple);
        padding: 0.8rem;
        border: none;
    }
    .btn-action {
        font-weight: 500;
        border-radius: 6px;
        padding: 0.4rem 0.8rem;
        font-size: 0.9rem;
    }
    .btn-next {
        font-weight: 600;
        font-size: 1rem;
        border-radius: 8px;
        padding: 0.6rem 1.5rem;
        box-shadow: 0 2px 6px 0 rgba(124, 58, 237, 0.10);
        background: linear-gradient(135deg, var(--primary-purple) 0%, var(--secondary-purple) 100%);
        border: 1px solid var(--primary-purple);
    }
    .btn-next:hover {
        background: linear-gradient(135deg, var(--primary-purple-dark) 0%, var(--primary-purple) 100%);
        box-shadow: 0 4px 12px rgba(124, 58, 237, 0.2);
    }
    .total-section {
        background: var(--purple-bg-light);
        border-radius: 8px;
        padding: 1rem;
        margin-top: 0.8rem;
        border: 1px solid var(--purple-border);
    }
    /* Purple theme variables */
    :root {
        --primary-purple: #7c3aed;
        --primary-purple-dark: #6d28d9;
        --primary-purple-light: #a78bfa;
        --secondary-purple: #8b5cf6;
        --accent-purple: #c084fc;
        --purple-bg: #faf5ff;
        --purple-bg-light: #f3e8ff;
        --purple-border: #e9d5ff;
        --text-purple: #581c87;
        --text-purple-light: #7c3aed;
    }
</style>

<div class="container-fluid mt-2 px-2 review-bg">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            <div class="review-header mb-1">
                <span class="review-header-icon"><i class="bi bi-list-check"></i></span>
                <h2 class="fw-bold mb-0" style="font-size: 1.5rem;">Review Selected Foods</h2>
            </div>
            <div class="review-subtitle">Review your selected menu items before proceeding.</div>
        </div>
    </div>

    <div class="review-card">
        <table class="table" id="food-table">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <td colspan="3" class="text-end"><strong>Total:</strong></td>
                    <td colspan="2" id="total">₱0.00</td>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="d-flex gap-3">
        <!-- BACK button: will POST the cart back to ClientMenus/Index -->
        <form id="backForm" method="post" action="/ClientMenus/Index">
            @* carry the JSON payload back *@
            <input type="hidden" name="OrderItemsJson" id="backItemsJson" />
            <button type="submit" class="btn btn-outline-secondary btn-action">
                <i class="bi bi-arrow-left me-2"></i>Order More
            </button>
        </form>

        <!-- NEXT button: confirm & go forward -->
        <button id="confirmBtn" class="btn btn-primary btn-next ms-auto">
            <i class="bi bi-check-lg me-2"></i>Next
        </button>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // keep cart entirely in JS
        let cartItems = @Html.Raw(initJson)

            function renderTable() {
                const $tbody = $('#food-table tbody').empty();
                let total = 0;
                cartItems.forEach(item => {
                    const subtotal = item.Quantity * item.price;
                    total += subtotal;
                    $tbody.append(`
                                            <tr data-id="${item.MenuId}">
                                                <td>${item.Name}</td>
                                                <td class="qty">${item.Quantity}</td>
                                                <td>₱${item.price.toFixed(2)}</td>
                                                <td class="subtotal">₱${subtotal.toFixed(2)}</td>
                                                <td>
                                                </td>
                                            </tr>
                                        `);
                });
                $('#total').text(`₱${total.toFixed(2)}`);
            }

        // on + or −
        $(document).on('click', '.update', function () {
            const $row = $(this).closest('tr');
            const id = $row.data('id');
            const act = $(this).data('action');

            cartItems = cartItems.map(item => {
                if (item.MenuId === id) {
                    if (act === 'add') item.Quantity++;
                    if (act === 'minus' && item.Quantity > 1) item.Quantity--;
                }
                return item;
            });
            renderTable();
        });

        // on remove
        $(document).on('click', '.remove', function () {
            const id = $(this).closest('tr').data('id');
            cartItems = cartItems.filter(item => item.MenuId !== id);
            renderTable();
        });

        // initial render
        renderTable();

        // Set OrderItemsJson when going back to menu
        $('#backForm').on('submit', function () {
            $('#backItemsJson').val(JSON.stringify(cartItems));
        });

        // on confirm, POST JSON to server
        $('#confirmBtn').on('click', function () {
            $.ajax({
                url: '/SelectedFoods/Index',
                method: 'POST',
                data: {
                    OrderItemsJson: JSON.stringify(cartItems),
                    isConfirmed: true
                },
                success: function (data) {
                    if (data.success) {
                        window.location.href = '/Orders/Form';
                    }
                }
            });
        });
    </script>
}
@model IEnumerable<Capstone2.Models.Material>

@{
    ViewData["Title"] = "Materials";
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<div class="container-fluid modern-bg">
    @if (TempData["Success"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["Success"]
        </div>
    }

    @{
        var lowThreshold = (int)(ViewBag.LowStockThreshold ?? 1000);
        var lowCount = 0;
        foreach (var m in Model)
        {
            if (m.Quantity <= lowThreshold)
            {
                lowCount++;
            }
        }
    }

    @if (lowCount > 0)
    {
        <div class="modern-alert modern-alert-warning">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <div>
                @lowCount item(s) are at or below the low stock threshold (@lowThreshold). Consider restocking.
            </div>
        </div>
    }

    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                <i class="bi bi-box-seam"></i>
            </div>
            <div>
                <h1 class="modern-title">Materials Inventory</h1>
                <p class="modern-subtitle">Manage your catering materials and supplies efficiently</p>
            </div>
        </div>
        <div class="modern-action-buttons">
            <a asp-action="Create" class="modern-action-btn btn-primary">
                <i class="bi bi-plus-lg"></i>
                Add New Material
            </a>
        </div>
    </div>

    <!-- Search Section -->
    <div class="modern-search-card">
        <form asp-controller="Materials" asp-action="Index" method="get" class="modern-search-form">
            <div>
                <label class="modern-form-label">Search Materials</label>
                <input type="text" name="searchString" class="modern-form-control" placeholder="Search materials by name..." />
            </div>
            <div>
                <button type="submit" class="modern-btn-search w-100">
                    <i class="bi bi-search me-2"></i>Search
                </button>
            </div>
        </form>
    </div>

    <!-- Materials Table -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-boxes"></i>
                Materials List (@Model.Count())
            </h5>
        </div>
        <div class="table-responsive">
            <table class="modern-table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th>Material Name</th>
                        <th>Description</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Type</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var isLow = item.Quantity <= lowThreshold;
                        <tr class="@(isLow ? "table-warning" : "")">
                            <td>
                                <div class="modern-name">@Html.DisplayFor(modelItem => item.Name)</div>
                            </td>
                            <td>
                                <div class="modern-info">@Html.DisplayFor(modelItem => item.Description)</div>
                            </td>
                            <td>
                                <div class="modern-name">@Html.DisplayFor(modelItem => item.Quantity)</div>
                                @if (isLow)
                                {
                                    <span class="modern-status-badge pending ms-2">
                                        <i class="bi bi-exclamation-triangle"></i>
                                        Low Stock
                                    </span>
                                }
                            </td>
                            <td>
                                <div class="modern-name">₱@item.Price.ToString("N2")</div>
                            </td>
                            <td>
                                @if (item.IsConsumable)
                                {
                                    <span class="modern-status-badge accepted">
                                        <i class="bi bi-check-circle"></i>
                                        Consumable
                                    </span>
                                }
                                else
                                {
                                    <span class="modern-status-badge inactive">
                                        <i class="bi bi-x-circle"></i>
                                        Non-Consumable
                                    </span>
                                }
                            </td>
                            <td class="text-end">
                                <div class="modern-table-actions">
                                    <a asp-action="Edit" asp-route-id="@item.MaterialId" class="modern-table-action-btn btn-outline-primary">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.MaterialId" class="modern-table-action-btn btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

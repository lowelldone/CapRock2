@model Capstone2.Models.Menu

@{
    ViewData["Title"] = "Create";
}

<style>
    body, .container, .card, .btn, h1, h2, h3, h4, h5, h6, p, label, input, textarea, select {
        font-family: 'Segoe UI', sans-serif;
    }

    .create-bg {
        background: linear-gradient(135deg, #f8fafc 60%, #e0e7ef 100%);
        min-height: 100vh;
        border-radius: 24px;
        padding-bottom: 2rem;
    }

    .create-header {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .create-header-icon {
        font-size: 2.5rem;
        color: #0d6efd;
        background: #e0f2fe;
        border-radius: 12px;
        padding: 8px 14px;
        box-shadow: 0 2px 8px rgba(13,110,253,0.08);
    }

    .create-subtitle {
        color: #6c757d;
        font-size: 1.1rem;
        margin-top: -8px;
        margin-bottom: 18px;
    }

    .form-card {
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 4px 24px 0 rgba(34, 41, 47, 0.08);
        padding: 2rem;
    }

    .form-control, .form-select {
        border-radius: 12px;
        border: 1px solid #e0e7ef;
        padding: 0.75rem 1rem;
        font-size: 1rem;
    }

        .form-control:focus, .form-select:focus {
            border-color: #6476f8;
            box-shadow: 0 0 0 0.2rem rgba(100, 118, 248, 0.25);
        }

    .btn-create {
        font-weight: 600;
        font-size: 1.1rem;
        border-radius: 12px;
        padding: 0.75rem 2rem;
        box-shadow: 0 2px 8px 0 rgba(100, 118, 248, 0.10);
    }

    .btn-back {
        font-weight: 500;
        border-radius: 8px;
        padding: 0.5rem 1rem;
    }
</style>

<div class="container-fluid mt-4 px-4 create-bg">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            <div class="create-header mb-1">
                <span class="create-header-icon"><i class="bi bi-list-ul"></i></span>
                <h2 class="fw-bold mb-0">Create Menu Item</h2>
            </div>
            <div class="create-subtitle">Add a new dish to the menu.</div>
        </div>
    </div>

    <div class="form-card">
        <form asp-action="Create" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Name" class="form-label fw-semibold">Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Enter dish name" />
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Price" class="form-label fw-semibold">Price</label>
                    <input asp-for="Price" class="form-control" placeholder="Enter price" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label fw-semibold">Dish Type</label>
                    <select asp-for="DishType" id="DishType" class="form-select">
                        <option selected value="MAINDISH">Main</option>
                        <option value="SIDEDISH">Side</option>
                        <option value="DESSERTS">Dessert</option>
                        <option value="SOFTDRINKS">Soft Drinks</option>
                        <option value="RICE">Rice</option>
                    </select>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Category" class="form-label fw-semibold">Category</label>
                    <select asp-for="Category" class="form-select" id="CategoryType">
                        <option value="Pork">Pork</option>
                        <option value="Beef">Beef</option>
                        <option value="Chicken">Chicken</option>
                        <option value="Seafood">Seafood</option>
                        <option value="Vegetables">Vegetables</option>
                        <option value="Noodles & Pasta">Noodles & Pasta</option>
                        <option value="Salad">Salad</option>
                        <option value="Dessert">Dessert</option>
                        <option value="SoftDrinks">Soft Drinks</option>
                        <option value="Rice">Rice</option>
                    </select>
                </div>
            </div>
            <div class="mb-4">
                <label class="form-label fw-semibold">Upload Image</label>
                <input type="file" name="ImageFile" class="form-control" />
            </div>
            <div class="d-flex gap-3">
                <button type="submit" class="btn btn-primary btn-create">
                    <i class="bi bi-check-lg me-2"></i>Create Menu Item
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary btn-back">
                    <i class="bi bi-arrow-left me-2"></i>Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    $(function () {
        $(function () {
            var $dishType = $('#DishType'),
                $category = $('#CategoryType');

            // Cache all original options
            var allOptions = $category.find('option').map(function () {
                return {
                    value: this.value,
                    text: this.text
                };
            }).get();

            // Mapping from DishType value → allowed Category values
            var map = {
                MAINDISH: ['Pork', 'Beef', 'Chicken', 'Seafood'],
                SIDEDISH: ['Vegetables', 'Noodles & Pasta', 'Salad'],
                DESSERTS: ['Dessert'],
                SOFTDRINKS: ['SoftDrinks'],
                RICE: ['Rice']
            };

            function filterCategories() {
                var sel = $dishType.val(),
                    allowed = map[sel] || [];

                $category.empty();               // remove current options
                $.each(allOptions, function (_, opt) {
                    if ($.inArray(opt.value, allowed) !== -1) {
                        // rebuild only allowed ones
                        $('<option>')
                            .val(opt.value)
                            .text(opt.text)
                            .appendTo($category);
                    }
                });
            }

            // initial filter + re-filter on change
            filterCategories();
            $dishType.on('change', filterCategories);
        });
    });
</script>

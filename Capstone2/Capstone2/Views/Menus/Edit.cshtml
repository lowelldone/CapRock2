@model Capstone2.Models.Menu

@{
    ViewData["Title"] = "Edit";
}

<style>
    body, .container, .card, .btn, h1, h2, h3, h4, h5, h6, p, label, input, textarea, select {
        font-family: 'Segoe UI', sans-serif;
    }

    .edit-bg {
        background: linear-gradient(135deg, #f8fafc 60%, #e0e7ef 100%);
        min-height: 100vh;
        border-radius: 24px;
        padding-bottom: 2rem;
    }

    .edit-header {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .edit-header-icon {
        font-size: 2.5rem;
        color: #0d6efd;
        background: #e0f2fe;
        border-radius: 12px;
        padding: 8px 14px;
        box-shadow: 0 2px 8px rgba(13,110,253,0.08);
    }

    .edit-subtitle {
        color: #6c757d;
        font-size: 1.1rem;
        margin-top: -8px;
        margin-bottom: 18px;
    }

    .form-card {
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 4px 24px 0 rgba(34, 41, 47, 0.08);
        padding: 2rem;
    }

    .form-control, .form-select {
        border-radius: 12px;
        border: 1px solid #e0e7ef;
        padding: 0.75rem 1rem;
        font-size: 1rem;
    }

        .form-control:focus, .form-select:focus {
            border-color: #6476f8;
            box-shadow: 0 0 0 0.2rem rgba(100, 118, 248, 0.25);
        }

    .btn-save {
        font-weight: 600;
        font-size: 1.1rem;
        border-radius: 12px;
        padding: 0.75rem 2rem;
        box-shadow: 0 2px 8px 0 rgba(100, 118, 248, 0.10);
    }

    .btn-back {
        font-weight: 500;
        border-radius: 8px;
        padding: 0.5rem 1rem;
    }

    .current-image {
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    /* Validation Styles */
    .is-invalid {
        border-color: #dc3545 !important;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25) !important;
    }

    .text-danger {
        color: #dc3545 !important;
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: block;
    }

    .alert {
        border-radius: 12px;
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .alert-success {
        background: linear-gradient(135deg, #d1edff 0%, #b3d9ff 100%);
        color: #0c5460;
        border-left: 4px solid #17a2b8;
    }

    .alert-danger {
        background: linear-gradient(135deg, #ffe6e6 0%, #ffcccc 100%);
        color: #721c24;
        border-left: 4px solid #dc3545;
    }
</style>

<div class="container-fluid mt-4 px-4 edit-bg">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            <div class="edit-header mb-1">
                <span class="edit-header-icon"><i class="bi bi-list-ul"></i></span>
                <h2 class="fw-bold mb-0">Edit Menu Item</h2>
            </div>
            <div class="edit-subtitle">Update menu item information.</div>
        </div>
    </div>

    <div class="form-card">
        <form asp-action="Edit" enctype="multipart/form-data">
            <!-- Validation Summary -->
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                <strong>Please correct the following errors:</strong>
            </div>
            <input type="hidden" asp-for="MenuId" />
            <input type="hidden" asp-for="ImagePath" />
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Name" class="form-label fw-semibold">Name <span class="text-danger">*</span></label>
                    <input asp-for="Name" class="form-control" placeholder="Enter dish name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Price" class="form-label fw-semibold">Price <span class="text-danger">*</span></label>
                    <input asp-for="Price" class="form-control" placeholder="Enter price" type="number" step="0.01" min="0" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label fw-semibold">Dish Type <span class="text-danger">*</span></label>
                    <select asp-for="DishType" id="DishType" class="form-select">
                        <option value="">-- Select Dish Type --</option>
                        <option value="MAINDISH">Main</option>
                        <option value="SIDEDISH">Side</option>
                        <option value="DESSERTS">Dessert</option>
                        <option value="SOFTDRINKS">Soft Drinks</option>
                        <option value="RICE">Rice</option>
                    </select>
                    <span asp-validation-for="DishType" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Category" class="form-label fw-semibold">Category <span class="text-danger">*</span></label>
                    <select asp-for="Category" class="form-select" id="CategoryType">
                        <option value="">-- Select Category --</option>
                        <option value="Pork">Pork</option>
                        <option value="Beef">Beef</option>
                        <option value="Chicken">Chicken</option>
                        <option value="Seafood">Seafood</option>
                        <option value="Vegetables">Vegetables</option>
                        <option value="Noodles & Pasta">Noodles & Pasta</option>
                        <option value="Salad">Salad</option>
                        <option value="Dessert">Dessert</option>
                        <option value="SoftDrinks">Soft Drinks</option>
                        <option value="Rice">Rice</option>
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>
            </div>
            <div class="mb-4">
                <label class="form-label fw-semibold">Upload Image</label>
                <input type="file" value="@Model.ImagePath" name="ImageFile" class="form-control" />
                @if (!string.IsNullOrEmpty(Model.ImagePath))
                {
                    <div class="mt-2">
                        <img src="@Model.ImagePath"
                             alt="@Model.Name"
                             class="current-image"
                             style="width:150px;height:150px;object-fit:cover;" />
                    </div>
                }
            </div>
            <div class="d-flex gap-3">
                <button type="submit" class="btn btn-primary btn-save">
                    <i class="bi bi-check-lg me-2"></i>Save Changes
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary btn-back">
                    <i class="bi bi-arrow-left me-2"></i>Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    $(function () {
        var $dishType = $('#DishType'),
            $category = $('#CategoryType');

        // Cache all original options
        var allOptions = $category.find('option').map(function () {
            return {
                value: this.value,
                text: this.text
            };
        }).get();

        // Mapping from DishType value → allowed Category values
        var map = {
            MAINDISH: ['Pork', 'Beef', 'Chicken', 'Seafood'],
            SIDEDISH: ['Vegetables', 'Noodles & Pasta', 'Salad'],
            DESSERTS: ['Dessert'],
            SOFTDRINKS: ['SoftDrinks'],
            RICE: ['Rice']
        };

        function filterCategories() {
            var sel = $dishType.val(),
                allowed = map[sel] || [];

            $category.empty();               // remove current options
            // Add default option first
            $('<option>')
                .val('')
                .text('-- Select Category --')
                .appendTo($category);

            $.each(allOptions, function (_, opt) {
                if (opt.value && $.inArray(opt.value, allowed) !== -1) {
                    // rebuild only allowed ones
                    $('<option>')
                        .val(opt.value)
                        .text(opt.text)
                        .appendTo($category);
                }
            });
        }

        // initial filter + re-filter on change
        filterCategories();
        $dishType.on('change', filterCategories);

        // Form validation
        $('form').on('submit', function(e) {
            var isValid = true;

            // Clear previous error styling
            $('.form-control, .form-select').removeClass('is-invalid');
            $('.text-danger').remove();

            // Validate Name
            if (!$('#Name').val().trim()) {
                $('#Name').addClass('is-invalid');
                $('#Name').after('<span class="text-danger">Dish name is required.</span>');
                isValid = false;
            }

            // Validate Price
            var price = parseFloat($('#Price').val());
            if (isNaN(price) || price <= 0) {
                $('#Price').addClass('is-invalid');
                $('#Price').after('<span class="text-danger">Price must be greater than zero.</span>');
                isValid = false;
            }

            // Validate Dish Type
            if (!$('#DishType').val()) {
                $('#DishType').addClass('is-invalid');
                $('#DishType').after('<span class="text-danger">Dish type is required.</span>');
                isValid = false;
            }

            // Validate Category
            if (!$('#CategoryType').val()) {
                $('#CategoryType').addClass('is-invalid');
                $('#CategoryType').after('<span class="text-danger">Category is required.</span>');
                isValid = false;
            }

            if (!isValid) {
                e.preventDefault();
                // Scroll to first error
                $('.is-invalid').first().focus();
            }
        });
    });
</script>

@model Capstone2.Models.Customer

@{
    ViewData["Title"] = "Assign HeadWaiter";
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<style>
    /* Desktop styles - keep original layout */
    .modern-bg {
        padding: 2rem;
    }

    .modern-header {
        flex-direction: row;
        align-items: center;
        gap: 1rem;
    }

    .modern-action-buttons {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
    }

    .modern-action-btn {
        width: auto;
        justify-content: center;
    }

    .modern-form-control {
        font-size: 16px;
    }

    .d-flex.gap-3 {
        flex-direction: row;
        gap: 1rem !important;
    }

    .d-flex.gap-3 .modern-action-btn {
        width: auto;
    }

    .modern-status-badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        margin: 0.5rem 0;
    }

    /* Mobile responsive adjustments */
    @@media (max-width: 768px) {
        .modern-bg {
            padding: 0.5rem;
        }

        .modern-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
            text-align: center;
        }

        .modern-action-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            width: 100%;
        }

        .modern-action-btn {
            width: 100%;
            justify-content: center;
        }

        .d-flex.gap-3 {
            flex-direction: column;
            gap: 1rem !important;
        }

        .d-flex.gap-3 .modern-action-btn {
            width: 100%;
        }

        .modern-title {
            font-size: 1.5rem;
        }

        .modern-subtitle {
            font-size: 0.9rem;
        }

        .modern-status-card {
            margin-bottom: 1rem;
        }

        .modern-card-body {
            padding: 1rem;
        }
    }

    @@media (max-width: 576px) {
        .modern-title {
            font-size: 1.25rem;
        }

        .modern-subtitle {
            font-size: 0.8rem;
        }

        .modern-form-label {
            font-size: 0.9rem;
        }

        .modern-action-btn {
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
        }

        .modern-status-badge {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>

<div class="container-fluid modern-bg">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                <i class="bi bi-person-plus"></i>
            </div>
            <div>
                <h1 class="modern-title">Assign HeadWaiter</h1>
                <p class="modern-subtitle">Assign a headwaiter to manage this order.</p>
            </div>
        </div>
        <div class="modern-action-buttons">
            <a asp-action="Index" class="modern-action-btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back
            </a>
            <a asp-action="AssignWaiter" asp-route-id="@Model.CustomerID" class="modern-action-btn btn-primary">
                <i class="bi bi-person-plus"></i> Assign Waiters
            </a>
        </div>
    </div>

    <!-- Order Assignment Card -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-receipt"></i>
                Order Assignment
            </h5>
        </div>
        <div class="modern-card-body">
            <form asp-action="AssignHeadWaiter" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.CustomerID" />

                <div class="modern-form-group">
                    <label for="headWaiterId" class="modern-form-label">
                        <i class="bi bi-person-badge"></i>
                        Select HeadWaiter
                    </label>
                    <select name="headWaiterId" id="headWaiterId" class="modern-form-control" required>
                        <option value="">-- Choose a HeadWaiter --</option>
                        @{
                            var headWaiters = ViewBag.HeadWaiters as IEnumerable<HeadWaiter>;
                        }
                        @foreach (var headWaiter in headWaiters)
                        {
                            var isSelected = ViewBag.CurrentHeadWaiterId != null &&
                            (int)ViewBag.CurrentHeadWaiterId == headWaiter.HeadWaiterId;

                            if (isSelected)
                            {
                                <option value="@headWaiter.HeadWaiterId" selected>
                                    @headWaiter.User?.FirstName @headWaiter.User?.LastName
                                </option>
                            }
                            else
                            {
                                <option value="@headWaiter.HeadWaiterId">
                                    @headWaiter.User?.FirstName @headWaiter.User?.LastName
                                </option>
                            }
                        }
                    </select>
                    <div class="modern-form-group">
                        <small class="text-muted">
                            <i class="bi bi-info-circle"></i>
                            Select a headwaiter to manage this order. The headwaiter will be responsible for deploying waiters and managing materials.
                        </small>
                    </div>
                </div>

                <div class="d-flex gap-3">
                    <button type="submit" class="modern-action-btn btn-primary">
                        <i class="bi bi-check-circle"></i>
                        @(ViewBag.CurrentHeadWaiterId != null ? "Reassign" : "Assign") HeadWaiter
                    </button>
                    <a asp-action="Index" class="modern-action-btn btn-outline-secondary">
                        <i class="bi bi-x-circle"></i>
                        Cancel
                    </a>
                </div>
            </form>

            <!-- Current Assignment Status -->
            @{
                if (ViewBag.CurrentHeadWaiterId != null)
                {
                    var headWaiters = ViewBag.HeadWaiters as IEnumerable<HeadWaiter>;
                    HeadWaiter currentHeadWaiter = null;

                    if (headWaiters != null)
                    {
                        currentHeadWaiter = headWaiters
                        .FirstOrDefault(h => h.HeadWaiterId == (int)ViewBag.CurrentHeadWaiterId);
                    }

                    if (currentHeadWaiter != null)
                    {
                        <div class="text-center mt-4">
                            <div class="modern-status-badge accepted">
                                <i class="bi bi-person-check"></i>
                                Currently Assigned to: @currentHeadWaiter.User?.FirstName @currentHeadWaiter.User?.LastName
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center mt-4">
                        <div class="modern-status-badge pending">
                            <i class="bi bi-exclamation-triangle"></i>
                            No HeadWaiter Assigned
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<script>
    // Add visual feedback when selecting headwaiter
    document.getElementById('headWaiterId').addEventListener('change', function () {
        const selectedOption = this.options[this.selectedIndex];
        if (selectedOption.value) {
            console.log('Selected HeadWaiter:', selectedOption.text);
        }
    });

    // Form validation
    document.querySelector('form').addEventListener('submit', function (e) {
        const headWaiterId = document.getElementById('headWaiterId').value;
        if (!headWaiterId) {
            e.preventDefault();
            alert('Please select a HeadWaiter to assign to this order.');
            return false;
        }
    });
</script>

@if (ViewBag.SuccessMessage != null)
{
    <script>
        if (window.Swal) {
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: '@ViewBag.SuccessMessage',
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true
            });
        }
    </script>
}
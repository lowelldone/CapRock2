@model IEnumerable<Capstone2.Models.Customer>

@{
    ViewData["Title"] = "Assign Staffs - Admin";
    string selectedFilter = Context.Request.Query["statusFilter"];
    string[] status = ["Accepted", "Ongoing", "Completed"];
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<div class="container-fluid modern-bg">
    @if (TempData["Success"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["Success"]
        </div>
    }
    @if (TempData["ProfileError"] != null)
    {
        <div class="modern-alert modern-alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["ProfileError"]
        </div>
    }
    @if (TempData["ProfileSuccess"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["ProfileSuccess"]
        </div>
    }

    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                <i class="bi bi-person-check"></i>
            </div>
            <div>
                <h1 class="modern-title">Assign Staffs</h1>
                <p class="modern-subtitle">View accepted orders and assign headwaiters to manage them.</p>
            </div>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-list-task"></i>
                Staff Assignment Orders (@Model.Count())
            </h5>
        </div>
        <div class="table-responsive">
            <table class="modern-table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th class="col-customer">Customer Name</th>
                        <th class="col-venue">Venue</th>
                        <th class="col-date">Catering Date</th>
                        <th class="col-status">Status</th>
                        <th class="col-headwaiter">Assigned HeadWaiter</th>
                        <th class="col-actions text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="modern-name">@item.Name</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.Order.Venue</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.Order.CateringDate.ToShortDateString()</div>
                            </td>
                            <td>
                                <span class="modern-status-badge @(item.Order.Status switch {
                                    "Accepted" => "pending",
                                    "Ongoing" => "ongoing",
                                    "Completed" => "accepted",
                                    "Settling Balance" => "settling",
                                    _ => "inactive"
                                })">
                                    @if (item.Order.Status == "Accepted")
                                    {
                                        <i class="bi bi-clock"></i>
                                    }
                                    else if (item.Order.Status == "Ongoing")
                                    {
                                        <i class="bi bi-play-circle"></i>
                                    }
                                    else if (item.Order.Status == "Completed")
                                    {
                                        <i class="bi bi-check-circle"></i>
                                    }
                                    else if (item.Order.Status == "Settling Balance")
                                    {
                                        <i class="bi bi-calculator"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle"></i>
                                    }
                                    @item.Order.Status
                                </span>
                            </td>
                            <td>
                                @if (item.Order.HeadWaiter != null)
                                {
                                    <div class="modern-info">
                                        <i class="bi bi-person-badge me-1"></i>
                                        <strong>@item.Order.HeadWaiter.User?.FirstName @item.Order.HeadWaiter.User?.LastName</strong>
                                    </div>
                                }
                                else
                                {
                                    <span class="modern-status-badge pending">
                                        <i class="bi bi-exclamation-triangle"></i>
                                        Unassigned
                                    </span>
                                }
                            </td>
                            <td class="text-end">
                                <div class="modern-table-actions">
                                    @if (item.Order.HeadWaiterId == null)
                                    {
                                        <a asp-controller="PaidOrders" asp-action="AssignHeadWaiter" asp-route-id="@item.CustomerID"
                                           class="modern-table-action-btn btn-outline-primary">
                                            <i class="bi bi-person-plus"></i>
                                            Assign
                                        </a>
                                    }
                                    else
                                    {
                                        <a asp-controller="PaidOrders" asp-action="AssignHeadWaiter" asp-route-id="@item.CustomerID"
                                           class="modern-table-action-btn btn-outline-primary">
                                            <i class="bi bi-person-gear"></i>
                                            Reassign
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Profile Modal -->
<div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileModalLabel">Update Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="profileForm" method="post" asp-controller="PaidOrders" asp-action="UpdateProfile">
                    @Html.AntiForgeryToken()
                    <div class="modern-form-group">
                        <label for="username" class="modern-form-label">Username</label>
                        <input type="text" class="modern-form-control" id="username" name="username" required>
                    </div>
                    <div class="modern-form-group">
                        <label for="currentPassword" class="modern-form-label">Current Password</label>
                        <input type="password" class="modern-form-control" id="currentPassword" name="currentPassword" required>
                    </div>
                    <div class="modern-form-group">
                        <label for="newPassword" class="modern-form-label">New Password</label>
                        <input type="password" class="modern-form-control" id="newPassword" name="newPassword" required>
                    </div>
                    <div class="modern-form-group">
                        <label for="confirmPassword" class="modern-form-label">Confirm New Password</label>
                        <input type="password" class="modern-form-control" id="confirmPassword" name="confirmPassword" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="modern-action-btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="profileForm" class="modern-action-btn btn-primary">Update Profile</button>
            </div>
        </div>
    </div>
</div>

<script>
    function openProfileModal() {
        const modal = new bootstrap.Modal(document.getElementById('profileModal'));
        modal.show();
    }

    // Form validation
    document.getElementById('profileForm').addEventListener('submit', function (e) {
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (newPassword !== confirmPassword) {
            e.preventDefault();
            alert('New password and confirm password do not match!');
            return false;
        }

        if (newPassword.length < 6) {
            e.preventDefault();
            alert('Password must be at least 6 characters long!');
            return false;
        }
    });
</script>

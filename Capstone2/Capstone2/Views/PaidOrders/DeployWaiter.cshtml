@model Capstone2.Models.Order
@{
    ViewData["Title"] = "Assign Waiter";
    var waiters = ViewBag.Waiters as List<Capstone2.Models.Waiter>;
    int? headWaiterId = null;
    if (Context.Request.Query["headWaiterId"].Count > 0)
    {
        headWaiterId = Convert.ToInt32(Context.Request.Query["headWaiterId"]);
    }
}

<h2>Assign Waiter to Order</h2>

<div class="mb-3">
    <strong>Customer:</strong> @Model.Customer?.Name <br />
    <strong>Venue:</strong> @Model.Venue <br />
    <strong>Date:</strong> @Model.OrderDate.ToShortDateString() <br />
    <strong>Status:</strong> @Model.Status
</div>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div>@error.ErrorMessage</div>
        }
    </div>
}

<form asp-action="DeployWaiter" asp-route-id="@Model.CustomerID" method="post">
    @if (headWaiterId != null)
    {
        <input type="hidden" name="headWaiterId" value="@headWaiterId" />
    }
    <div class="mb-3">
        <label for="waiterIds" class="form-label">Select Waiters</label>
        <select id="waiterIds" name="waiterIds" class="form-select" multiple size="6" required>
            @foreach (var w in waiters)
            {
                var isAssigned = ((List<int>)ViewBag.AssignedWaiterIds).Contains(w.WaiterId);
                <option value="@w.WaiterId" selected="@(isAssigned ? "selected" : null)">
                    @w.User.FirstName @w.User.LastName (@w.User.Username) - [@w.Availability]
                </option>
            }
        </select>
        <small class="form-text text-muted">Hold Ctrl (Windows) or Command (Mac) to select multiple waiters.</small>
    </div>
    <button type="submit" class="btn btn-primary">Assign Waiters</button>
    <a asp-action="Index" class="btn btn-secondary ms-2">Cancel</a>
</form>

@if (((List<int>)ViewBag.AssignedWaiterIds).Count > 0)
{
    <div class="mt-4">
        <h5>Currently Assigned Waiters:</h5>
        <ul>
            @foreach (var w in waiters.Where(w => ((List<int>)ViewBag.AssignedWaiterIds).Contains(w.WaiterId)))
            {
                <li>@w.User.FirstName @w.User.LastName (@w.User.Username) - [@w.Availability]</li>
            }
        </ul>
    </div>
} 
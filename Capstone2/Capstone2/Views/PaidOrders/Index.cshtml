@model IEnumerable<Capstone2.Models.Customer>

@{
    ViewData["Title"] = "Manage Orders";
    string selectedFilter = Context.Request.Query["statusFilter"];

    string[] status = ["Accepted", "Ongoing", "Completed"];
    int? headWaiterId = null;
    if (Context.Request.Query["headWaiterId"].Count > 0)
    {
        headWaiterId = Convert.ToInt32(Context.Request.Query["headWaiterId"]);
    }

    bool isAdmin = ViewBag.IsAdmin ?? false;
}

<link rel="stylesheet" href="~/css/modern-ui.css" />

<div class="container-fluid modern-bg">
    @if (TempData["ProfileError"] != null)
    {
        <div class="modern-alert modern-alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["ProfileError"]
        </div>
    }
    @if (TempData["ProfileSuccess"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["ProfileSuccess"]
        </div>
    }
    @if (TempData["PullOutSuccess"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["PullOutSuccess"]
        </div>
    }
    @if (TempData["ReturnSuccess"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["ReturnSuccess"]
        </div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="modern-alert modern-alert-success">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["Success"]
        </div>
    }

    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <div class="modern-header">
            <div class="modern-header-icon">
                @if (isAdmin)
                {
                    <i class="bi bi-person-check"></i>
                }
                else
                {
                    <i class="bi bi-receipt"></i>
                }
            </div>
            <div>
                <h1 class="modern-title">
                    @if (isAdmin)
                    {
                        @:Assign Staffs
                    }
                    else
                    {
                        @:Manage Orders
                    }
                </h1>
                <p class="modern-subtitle">
                    @if (isAdmin)
                    {
                        @:View accepted orders and assign headwaiters to manage them.
                    }
                    else
                    {
                        @:View and manage your assigned catering orders here.
                    }
                </p>
            </div>
        </div>
        <div class="modern-action-buttons">
            <button class="modern-action-btn btn-outline-primary" onclick="openProfileModal()">
                <i class="bi bi-person-circle"></i>
                Update Profile
            </button>
        </div>
    </div>

    <!-- Search Section -->
    @if (!isAdmin)
    {
        <div class="modern-search-card">
            <form asp-action="Index" method="get" class="modern-search-form">
                @if (!isAdmin && headWaiterId.HasValue)
                {
                    <input type="hidden" name="headWaiterId" value="@headWaiterId.Value" />
                }
                <div>
                    <label class="modern-form-label">Search Orders</label>
                    <input type="text" name="searchString" class="modern-form-control" placeholder="Search by Order Number or Customer Name..." value="@Context.Request.Query["searchString"]" />
                </div>
                <div>
                    <button type="submit" class="modern-btn-search w-100">
                        <i class="bi bi-search me-2"></i>Search
                    </button>
                </div>
                <div>
                    <a asp-action="Index" class="modern-action-btn btn-outline-secondary w-100">
                        <i class="bi bi-arrow-clockwise me-2"></i>Clear
                    </a>
                </div>
            </form>
        </div>
    }

    <!-- Orders Table -->
    <div class="modern-status-card">
        <div class="modern-status-card-header">
            <h5 class="modern-status-card-title">
                <i class="bi bi-list-task"></i>
                @if (isAdmin)
                {
                    @:Staff Assignment Orders
                }
                else
                {
                    @:Manage Orders (@Model.Count())
                }
            </h5>
        </div>
        <div class="table-responsive">
            <table class="modern-table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Phone</th>
                        <th>Venue</th>
                        <th>Catering Date</th>
                        <th>Occasion</th>
                        <th>Time of Food Serving</th>
                        <th>Status</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var hasPullOut = item.Order != null && item.Order.OrderId != 0 &&
                        (ViewBag.MaterialPullOuts != null && ((IEnumerable<dynamic>)ViewBag.MaterialPullOuts).Any(p => p.OrderId == item.Order.OrderId));
                        var hasReturn = item.Order != null && item.Order.OrderId != 0 &&
                        (ViewBag.MaterialReturns != null && ((IEnumerable<dynamic>)ViewBag.MaterialReturns).Any(r => r.OrderId == item.Order.OrderId));
                        <tr>
                            <td>
                                <div class="modern-name">@item.Name</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.ContactNo</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.Order.Venue</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.Order.CateringDate.ToShortDateString()</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.Order.Occasion</div>
                            </td>
                            <td>
                                <div class="modern-info">@item.Order.timeOfFoodServing.ToShortTimeString()</div>
                            </td>
                            <td>
                                @{
                                    var order = item.Order;
                                    var dynamicStatus = order?.Status ?? "";
                                    if (order != null)
                                    {
                                        var remainingDict = ViewBag.RemainingBalanceByOrder as System.Collections.Generic.IDictionary<int, double>;
                                        var returnsDict = ViewBag.ReturnsExistByOrder as System.Collections.Generic.IDictionary<int, bool>;
                                        var remaining = remainingDict != null && remainingDict.ContainsKey(order.OrderId)
                                        ? remainingDict[order.OrderId]
                                        : 0d;
                                        var hasReturns = returnsDict != null && returnsDict.ContainsKey(order.OrderId);
                                        // If materials have been returned and there is remaining balance, show Settling Balance
                                        if (remaining > 0 && hasReturns)
                                        {
                                            dynamicStatus = "Settling Balance";
                                        }
                                    }
                                }
                                <span class="modern-status-badge @(dynamicStatus switch {
                                    "Accepted" => "accepted",
                                    "Ongoing" => "ongoing",
                                    "Completed" => "accepted",
                                    "Settling Balance" => "settling",
                                    _ => "inactive"
                                })">
                                    @if (dynamicStatus == "Accepted")
                                    {
                                        <i class="bi bi-check-circle"></i>
                                    }
                                    else if (dynamicStatus == "Ongoing")
                                    {
                                        <i class="bi bi-play-circle"></i>
                                    }
                                    else if (dynamicStatus == "Completed")
                                    {
                                        <i class="bi bi-check-circle"></i>
                                    }
                                    else if (dynamicStatus == "Settling Balance")
                                    {
                                        <i class="bi bi-calculator"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle"></i>
                                    }
                                    @dynamicStatus
                                </span>
                            </td>
                            <td class="text-end">
                                <div class="modern-table-actions">
                                    @if (item.Order?.Status == "Ongoing" && !hasReturn)
                                    {
                                        @if (headWaiterId != null)
                                        {
                                            <a asp-controller="PaidOrders" asp-action="DeployWaiter" asp-route-id="@item.CustomerID" asp-route-headWaiterId="@headWaiterId"
                                               class="modern-table-action-btn btn-outline-warning">
                                                <i class="bi bi-person-plus"></i>
                                                Assign
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-controller="PaidOrders" asp-action="DeployWaiter" asp-route-id="@item.CustomerID"
                                               class="modern-table-action-btn btn-outline-warning">
                                                <i class="bi bi-person-plus"></i>
                                                Assign
                                            </a>
                                        }
                                    }
                                    else if (item.Order?.Status == "Accepted" && !hasReturn)
                                    {
                                        @if (headWaiterId != null)
                                        {
                                            <a asp-controller="PaidOrders" asp-action="DeployWaiter" asp-route-id="@item.CustomerID" asp-route-headWaiterId="@headWaiterId"
                                               class="modern-table-action-btn btn-outline-warning">
                                                <i class="bi bi-person-plus"></i>
                                                Assign
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-controller="PaidOrders" asp-action="DeployWaiter" asp-route-id="@item.CustomerID"
                                               class="modern-table-action-btn btn-outline-warning">
                                                <i class="bi bi-person-plus"></i>
                                                Assign
                                            </a>
                                        }
                                    }
                                    @if (item.Order?.Status != "Completed" && !hasReturn)
                                    {
                                        <a asp-action="PullOutMaterials" asp-route-id="@item.CustomerID" class="modern-table-action-btn btn-outline-primary">
                                            <i class="bi bi-box-arrow-up"></i>
                                            Pull Out
                                        </a>
                                        @if (hasPullOut && !hasReturn)
                                        {
                                            <a asp-action="ReturnMaterials" asp-route-id="@item.CustomerID" class="modern-table-action-btn btn-outline-warning">
                                                <i class="bi bi-arrow-counterclockwise"></i>
                                                Return
                                            </a>
                                        }
                                    }
                                    @if (headWaiterId != null)
                                    {
                                        <a asp-action="Details" asp-route-id="@item.CustomerID" asp-route-headWaiterId="@headWaiterId"
                                           class="modern-table-action-btn btn-outline-info">
                                            <i class="bi bi-info-circle"></i>
                                            Details
                                        </a>
                                    }
                                    else
                                    {
                                        <a asp-action="Details" asp-route-id="@item.CustomerID"
                                           class="modern-table-action-btn btn-outline-info">
                                            <i class="bi bi-info-circle"></i>
                                            Details
                                        </a>
                                    }
                                    @* Headwaiter remove-from-view for Completed orders *@
                                    @if (!isAdmin && item?.Order?.Status == "Completed")
                                    {
                                        <form asp-controller="PaidOrders" asp-action="HideFromView" asp-route-id="@item.CustomerID" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="modern-table-action-btn btn-outline-danger" onclick="return confirm('Remove this completed order from your view?');">
                                                <i class="bi bi-eye-slash"></i>
                                                Remove
                                            </button>
                                        </form>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Profile Modal -->
<div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileModalLabel">Update Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="profileForm" method="post" asp-controller="PaidOrders" asp-action="UpdateProfile">
                    @Html.AntiForgeryToken()
                    <div class="modern-form-group">
                        <label for="username" class="modern-form-label">Username</label>
                        <input type="text" class="modern-form-control" id="username" name="username" required>
                    </div>
                    <div class="modern-form-group">
                        <label for="currentPassword" class="modern-form-label">Current Password</label>
                        <input type="password" class="modern-form-control" id="currentPassword" name="currentPassword" required>
                    </div>
                    <div class="modern-form-group">
                        <label for="newPassword" class="modern-form-label">New Password</label>
                        <input type="password" class="modern-form-control" id="newPassword" name="newPassword" required>
                    </div>
                    <div class="modern-form-group">
                        <label for="confirmPassword" class="modern-form-label">Confirm New Password</label>
                        <input type="password" class="modern-form-control" id="confirmPassword" name="confirmPassword" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="modern-action-btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="profileForm" class="modern-action-btn btn-primary">Update Profile</button>
            </div>
        </div>
    </div>
</div>

<script>
    function openProfileModal() {
        const modal = new bootstrap.Modal(document.getElementById('profileModal'));
        modal.show();
    }

    // Form validation
    document.getElementById('profileForm').addEventListener('submit', function (e) {
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (newPassword !== confirmPassword) {
            e.preventDefault();
            alert('New password and confirm password do not match!');
            return false;
        }

        if (newPassword.length < 6) {
            e.preventDefault();
            alert('Password must be at least 6 characters long!');
            return false;
        }
    });
</script>
